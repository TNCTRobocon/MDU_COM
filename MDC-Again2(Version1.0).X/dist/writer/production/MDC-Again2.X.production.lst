

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 15 12:47:39 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  0008                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  008C                     	;# 
    49  0091                     	;# 
    50  0092                     	;# 
    51  0095                     	;# 
    52  0096                     	;# 
    53  0097                     	;# 
    54  0098                     	;# 
    55  0099                     	;# 
    56  009A                     	;# 
    57  009B                     	;# 
    58  009B                     	;# 
    59  009C                     	;# 
    60  009D                     	;# 
    61  009E                     	;# 
    62  010C                     	;# 
    63  0111                     	;# 
    64  0112                     	;# 
    65  0115                     	;# 
    66  0116                     	;# 
    67  0117                     	;# 
    68  0118                     	;# 
    69  0119                     	;# 
    70  011A                     	;# 
    71  011B                     	;# 
    72  011D                     	;# 
    73  011D                     	;# 
    74  018C                     	;# 
    75  0191                     	;# 
    76  0191                     	;# 
    77  0192                     	;# 
    78  0193                     	;# 
    79  0193                     	;# 
    80  0193                     	;# 
    81  0194                     	;# 
    82  0195                     	;# 
    83  0196                     	;# 
    84  0199                     	;# 
    85  019A                     	;# 
    86  019B                     	;# 
    87  019B                     	;# 
    88  019B                     	;# 
    89  019B                     	;# 
    90  019C                     	;# 
    91  019C                     	;# 
    92  019D                     	;# 
    93  019E                     	;# 
    94  019F                     	;# 
    95  020C                     	;# 
    96  0211                     	;# 
    97  0211                     	;# 
    98  0212                     	;# 
    99  0212                     	;# 
   100  0213                     	;# 
   101  0213                     	;# 
   102  0214                     	;# 
   103  0214                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0215                     	;# 
   107  0216                     	;# 
   108  0216                     	;# 
   109  0217                     	;# 
   110  0217                     	;# 
   111  0291                     	;# 
   112  0291                     	;# 
   113  0292                     	;# 
   114  0293                     	;# 
   115  0294                     	;# 
   116  0295                     	;# 
   117  0295                     	;# 
   118  0296                     	;# 
   119  0391                     	;# 
   120  0392                     	;# 
   121  0393                     	;# 
   122  039A                     	;# 
   123  039C                     	;# 
   124  039D                     	;# 
   125  039E                     	;# 
   126  039F                     	;# 
   127  0FE4                     	;# 
   128  0FE5                     	;# 
   129  0FE6                     	;# 
   130  0FE7                     	;# 
   131  0FE8                     	;# 
   132  0FE9                     	;# 
   133  0FEA                     	;# 
   134  0FEB                     	;# 
   135  0FED                     	;# 
   136  0FEE                     	;# 
   137  0FEF                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  008C                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0095                     	;# 
   168  0096                     	;# 
   169  0097                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  010C                     	;# 
   179  0111                     	;# 
   180  0112                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0117                     	;# 
   184  0118                     	;# 
   185  0119                     	;# 
   186  011A                     	;# 
   187  011B                     	;# 
   188  011D                     	;# 
   189  011D                     	;# 
   190  018C                     	;# 
   191  0191                     	;# 
   192  0191                     	;# 
   193  0192                     	;# 
   194  0193                     	;# 
   195  0193                     	;# 
   196  0193                     	;# 
   197  0194                     	;# 
   198  0195                     	;# 
   199  0196                     	;# 
   200  0199                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  019C                     	;# 
   208  019D                     	;# 
   209  019E                     	;# 
   210  019F                     	;# 
   211  020C                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  0212                     	;# 
   215  0212                     	;# 
   216  0213                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0291                     	;# 
   228  0291                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0294                     	;# 
   232  0295                     	;# 
   233  0295                     	;# 
   234  0296                     	;# 
   235  0391                     	;# 
   236  0392                     	;# 
   237  0393                     	;# 
   238  039A                     	;# 
   239  039C                     	;# 
   240  039D                     	;# 
   241  039E                     	;# 
   242  039F                     	;# 
   243  0FE4                     	;# 
   244  0FE5                     	;# 
   245  0FE6                     	;# 
   246  0FE7                     	;# 
   247  0FE8                     	;# 
   248  0FE9                     	;# 
   249  0FEA                     	;# 
   250  0FEB                     	;# 
   251  0FED                     	;# 
   252  0FEE                     	;# 
   253  0FEF                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  008C                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  010C                     	;# 
   295  0111                     	;# 
   296  0112                     	;# 
   297  0115                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0118                     	;# 
   301  0119                     	;# 
   302  011A                     	;# 
   303  011B                     	;# 
   304  011D                     	;# 
   305  011D                     	;# 
   306  018C                     	;# 
   307  0191                     	;# 
   308  0191                     	;# 
   309  0192                     	;# 
   310  0193                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0194                     	;# 
   314  0195                     	;# 
   315  0196                     	;# 
   316  0199                     	;# 
   317  019A                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019C                     	;# 
   323  019C                     	;# 
   324  019D                     	;# 
   325  019E                     	;# 
   326  019F                     	;# 
   327  020C                     	;# 
   328  0211                     	;# 
   329  0211                     	;# 
   330  0212                     	;# 
   331  0212                     	;# 
   332  0213                     	;# 
   333  0213                     	;# 
   334  0214                     	;# 
   335  0214                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0215                     	;# 
   339  0216                     	;# 
   340  0216                     	;# 
   341  0217                     	;# 
   342  0217                     	;# 
   343  0291                     	;# 
   344  0291                     	;# 
   345  0292                     	;# 
   346  0293                     	;# 
   347  0294                     	;# 
   348  0295                     	;# 
   349  0295                     	;# 
   350  0296                     	;# 
   351  0391                     	;# 
   352  0392                     	;# 
   353  0393                     	;# 
   354  039A                     	;# 
   355  039C                     	;# 
   356  039D                     	;# 
   357  039E                     	;# 
   358  039F                     	;# 
   359  0FE4                     	;# 
   360  0FE5                     	;# 
   361  0FE6                     	;# 
   362  0FE7                     	;# 
   363  0FE8                     	;# 
   364  0FE9                     	;# 
   365  0FEA                     	;# 
   366  0FEB                     	;# 
   367  0FED                     	;# 
   368  0FEE                     	;# 
   369  0FEF                     	;# 
   370                           
   371                           	psect	idataCOMMON
   372  0206                     __pidataCOMMON:	
   373                           
   374                           ;initializer for _toff
   375  0206  3464               	retlw	100
   376                           
   377                           ;initializer for _ton
   378  0207  3464               	retlw	100
   379                           
   380                           	psect	stringtext
   381  0200                     __pstringtext:	
   382  0200                     _dt_min:	
   383  0200  3433               	retlw	51
   384  0201  3433               	retlw	51
   385  0202                     __end_of_dt_min:	
   386  0202                     _address:	
   387  0202  340E               	retlw	14
   388  0203                     __end_of_address:	
   389  000B                     _INTCON	set	11
   390  000B                     _INTCONbits	set	11
   391  0011                     _PIR1bits	set	17
   392  001B                     _PR2	set	27
   393  001C                     _T2CONbits	set	28
   394  0015                     _TMR0	set	21
   395  008B                     _SSP1IF	set	139
   396  0095                     _OPTION_REGbits	set	149
   397  0099                     _OSCCON	set	153
   398  008C                     _TRISAbits	set	140
   399  048B                     _SSP1IE	set	1163
   400  0460                     _TRISA0	set	1120
   401  0465                     _TRISA5	set	1125
   402  011D                     _APFCONbits	set	285
   403  010C                     _LATAbits	set	268
   404  018C                     _ANSELAbits	set	396
   405  0212                     _SSPADD	set	530
   406  0211                     _SSPBUF	set	529
   407  0215                     _SSPCON	set	533
   408  0216                     _SSPCON2	set	534
   409  0217                     _SSPCON3	set	535
   410  0214                     _SSPSTAT	set	532
   411  10AC                     _CKP	set	4268
   412  10A5                     _D_nA	set	4261
   413  10A2                     _R_nW	set	4258
   414  0293                     _CCP1CONbits	set	659
   415  0291                     _CCPR1L	set	657
   416  0296                     _PSTR1CONbits	set	662
   417  039A                     _CLKRCON	set	922
   418                           
   419                           ; #config settings
   420  0000                     
   421                           	psect	cinit
   422  0010                     start_initialization:	
   423  0010                     __initialization:	
   424                           
   425                           ; Clear objects allocated to COMMON
   426  0010  01F7               	clrf	__pbssCOMMON& (0+127)
   427  0011  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   428                           
   429                           ; Initialize objects allocated to COMMON
   430  0012  2206               	fcall	__pidataCOMMON	;fetch initializer
   431  0013  00F9               	movwf	__pdataCOMMON& (0+127)
   432  0014  2207               	fcall	__pidataCOMMON+1	;fetch initializer
   433  0015  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   434  0016                     end_of_initialization:	
   435                           ;End of C runtime variable initialization code
   436                           
   437  0016                     __end_of__initialization:	
   438  0016  0020               	movlb	0
   439  0017  28BD               	ljmp	_main	;jump to C main() function
   440                           
   441                           	psect	bssCOMMON
   442  0077                     __pbssCOMMON:	
   443  0077                     _i2c_data:	
   444  0077                     	ds	1
   445  0078                     _w:	
   446  0078                     	ds	1
   447                           
   448                           	psect	dataCOMMON
   449  0079                     __pdataCOMMON:	
   450  0079                     _toff:	
   451  0079                     	ds	1
   452  007A                     _ton:	
   453  007A                     	ds	1
   454                           
   455                           	psect	cstackCOMMON
   456  0070                     __pcstackCOMMON:	
   457  0070                     ?_motor_init:	
   458  0070                     ?_i2c_init:	
   459                           ; 0 bytes @ 0x0
   460                           
   461  0070                     ?_i2c_isr:	
   462                           ; 0 bytes @ 0x0
   463                           
   464  0070                     ??_i2c_isr:	
   465                           ; 0 bytes @ 0x0
   466                           
   467  0070                     ?_pwm_init:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0070                     ?_clk_init:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ?_main:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0070                     ?_isr:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0070                     ?_i2c_get:	
   480                           ; 0 bytes @ 0x0
   481                           
   482                           
   483                           ; 1 bytes @ 0x0
   484  0070                     	ds	1
   485  0071                     i2c_isr@dammy:	
   486                           
   487                           ; 1 bytes @ 0x1
   488  0071                     	ds	1
   489  0072                     ??_isr:	
   490                           
   491                           ; 0 bytes @ 0x2
   492  0072                     	ds	1
   493  0073                     ??_i2c_init:	
   494  0073                     ??_i2c_get:	
   495                           ; 0 bytes @ 0x3
   496                           
   497  0073                     ??_clk_init:	
   498                           ; 0 bytes @ 0x3
   499                           
   500  0073                     ?_insert_dt:	
   501                           ; 0 bytes @ 0x3
   502                           
   503  0073                     i2c_init@address:	
   504                           ; 0 bytes @ 0x3
   505                           
   506  0073                     insert_dt@var:	
   507                           ; 1 bytes @ 0x3
   508                           
   509                           
   510                           ; 2 bytes @ 0x3
   511  0073                     	ds	2
   512  0075                     ?_pwm_dt:	
   513  0075                     pwm_dt@dt:	
   514                           ; 0 bytes @ 0x5
   515                           
   516                           
   517                           ; 2 bytes @ 0x5
   518  0075                     	ds	2
   519  0077                     ??_motor_init:	
   520  0077                     ??_pwm_init:	
   521                           ; 0 bytes @ 0x7
   522                           
   523                           
   524                           	psect	cstackBANK0
   525  0020                     __pcstackBANK0:	
   526                           ; 0 bytes @ 0x7
   527                           
   528  0020                     ??_insert_dt:	
   529                           
   530                           ; 0 bytes @ 0x0
   531  0020                     	ds	3
   532  0023                     ??_pwm_dt:	
   533                           
   534                           ; 0 bytes @ 0x3
   535  0023                     	ds	2
   536  0025                     _pwm_dt$445:	
   537                           
   538                           ; 2 bytes @ 0x5
   539  0025                     	ds	2
   540  0027                     pwm_dt@abs:	
   541                           
   542                           ; 2 bytes @ 0x7
   543  0027                     	ds	2
   544  0029                     ??_main:	
   545                           
   546                           ; 0 bytes @ 0x9
   547  0029                     	ds	3
   548                           
   549                           	psect	maintext
   550  00BD                     __pmaintext:	
   551 ;;
   552 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   553 ;;
   554 ;; *************** function _main *****************
   555 ;; Defined at:
   556 ;;		line 33 in file "main.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;		None               void
   563 ;; Registers used:
   564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : B1F/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMMON   BANK0   BANK1
   570 ;;      Params:         0       0       0
   571 ;;      Locals:         0       0       0
   572 ;;      Temps:          0       3       0
   573 ;;      Totals:         0       3       0
   574 ;;Total ram usage:        3 bytes
   575 ;; Hardware stack levels required when called:    6
   576 ;; This function calls:
   577 ;;		_i2c_get
   578 ;;		_i2c_init
   579 ;;		_motor_init
   580 ;;		_pwm_dt
   581 ;; This function is called by:
   582 ;;		Startup code after reset
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _main
   588  00BD                     _main:	
   589                           
   590                           ;main.c: 35: OSCCON=0b11110000;
   591                           
   592                           ;incstack = 0
   593                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   594  00BD  30F0               	movlw	240
   595  00BE  0021               	movlb	1	; select bank1
   596  00BF  0099               	movwf	25	;volatile
   597                           
   598                           ;main.c: 37: motor_init();
   599  00C0  2203               	fcall	_motor_init
   600                           
   601                           ;main.c: 38: i2c_init(address);
   602  00C1  3002               	movlw	low (_address| (0+32768))
   603  00C2  0084               	movwf	4
   604  00C3  3082               	movlw	high (_address| (0+32768))
   605  00C4  0085               	movwf	5
   606  00C5  0800               	movf	0,w	;code access
   607  00C6  2105               	fcall	_i2c_init
   608                           
   609                           ;main.c: 41: INTCONbits.PEIE=1;
   610  00C7  170B               	bsf	11,6	;volatile
   611                           
   612                           ;main.c: 42: INTCONbits.GIE=1;
   613  00C8  178B               	bsf	11,7	;volatile
   614  00C9                     l918:	
   615                           ;main.c: 46: while (1){
   616                           
   617                           
   618                           ;main.c: 47: pwm_dt((int16_t)i2c_get()<<8);
   619  00C9  2208               	fcall	_i2c_get
   620  00CA  0020               	movlb	0	; select bank0
   621  00CB  00A9               	movwf	??_main
   622  00CC  01AA               	clrf	??_main+1
   623  00CD  0829               	movf	??_main,w
   624  00CE  00AA               	movwf	??_main+1
   625  00CF  01A9               	clrf	??_main
   626  00D0  0829               	movf	??_main,w
   627  00D1  00F5               	movwf	pwm_dt@dt
   628  00D2  082A               	movf	??_main+1,w
   629  00D3  00F6               	movwf	pwm_dt@dt+1
   630  00D4  2018               	fcall	_pwm_dt
   631  00D5  28C9               	goto	l918
   632  00D6                     __end_of_main:	
   633                           
   634                           	psect	text1
   635  0203                     __ptext1:	
   636 ;; *************** function _motor_init *****************
   637 ;; Defined at:
   638 ;;		line 15 in file "pwm.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;		None               void
   645 ;; Registers used:
   646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1
   652 ;;      Params:         0       0       0
   653 ;;      Locals:         0       0       0
   654 ;;      Temps:          0       0       0
   655 ;;      Totals:         0       0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    5
   659 ;; This function calls:
   660 ;;		_clk_init
   661 ;;		_pwm_init
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _motor_init
   669  0203                     _motor_init:	
   670                           
   671                           ;pwm.c: 17: pwm_init();
   672                           
   673                           ;incstack = 0
   674                           ; Regs used in _motor_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   675  0203  2097               	fcall	_pwm_init
   676                           
   677                           ;pwm.c: 19: clk_init();
   678  0204  2117               	fcall	_clk_init
   679  0205  0008               	return
   680  0206                     __end_of_motor_init:	
   681                           
   682                           	psect	text2
   683  0097                     __ptext2:	
   684 ;; *************** function _pwm_init *****************
   685 ;; Defined at:
   686 ;;		line 36 in file "pwm.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;		None               void
   693 ;; Registers used:
   694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1
   700 ;;      Params:         0       0       0
   701 ;;      Locals:         0       0       0
   702 ;;      Temps:          0       0       0
   703 ;;      Totals:         0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    4
   707 ;; This function calls:
   708 ;;		_pwm_dt
   709 ;; This function is called by:
   710 ;;		_motor_init
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _pwm_init
   716  0097                     _pwm_init:	
   717                           
   718                           ;pwm.c: 44: TRISA5 = 1;
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _pwm_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   722  0097  0021               	movlb	1	; select bank1
   723  0098  168C               	bsf	12,5	;volatile
   724                           
   725                           ;pwm.c: 45: TRISA0 = 1;
   726  0099  140C               	bsf	12,0	;volatile
   727                           
   728                           ;pwm.c: 47: ANSELAbits.ANSA0 = 0;
   729  009A  0023               	movlb	3	; select bank3
   730  009B  100C               	bcf	12,0	;volatile
   731                           
   732                           ;pwm.c: 50: APFCONbits.CCP1SEL = 1;
   733  009C  0022               	movlb	2	; select bank2
   734  009D  141D               	bsf	29,0	;volatile
   735                           
   736                           ;pwm.c: 51: APFCONbits.P1BSEL = 0;
   737  009E  109D               	bcf	29,1	;volatile
   738                           
   739                           ;pwm.c: 53: LATAbits.LATA0 = 0;
   740  009F  100C               	bcf	12,0	;volatile
   741                           
   742                           ;pwm.c: 54: LATAbits.LATA5 = 0;
   743  00A0  128C               	bcf	12,5	;volatile
   744                           
   745                           ;pwm.c: 59: T2CONbits.TMR2ON = 0;
   746  00A1  0020               	movlb	0	; select bank0
   747  00A2  111C               	bcf	28,2	;volatile
   748                           
   749                           ;pwm.c: 60: T2CONbits.T2OUTPS = 0;
   750  00A3  3087               	movlw	-121
   751  00A4  059C               	andwf	28,f	;volatile
   752                           
   753                           ;pwm.c: 61: T2CONbits.T2CKPS = 2;
   754  00A5  081C               	movf	28,w	;volatile
   755  00A6  39FC               	andlw	-4
   756  00A7  3802               	iorlw	2
   757  00A8  009C               	movwf	28	;volatile
   758                           
   759                           ;pwm.c: 62: PR2 = 0xFF;
   760  00A9  30FF               	movlw	255
   761  00AA  009B               	movwf	27	;volatile
   762                           
   763                           ;pwm.c: 63: T2CONbits.TMR2ON = 1;
   764  00AB  151C               	bsf	28,2	;volatile
   765                           
   766                           ;pwm.c: 69: CCP1CONbits.P1M = 0b10;
   767  00AC  0025               	movlb	5	; select bank5
   768  00AD  0813               	movf	19,w	;volatile
   769  00AE  393F               	andlw	-193
   770  00AF  3880               	iorlw	128
   771  00B0  0093               	movwf	19	;volatile
   772                           
   773                           ;pwm.c: 70: CCP1CONbits.DC1B = 0;
   774  00B1  30CF               	movlw	-49
   775  00B2  0593               	andwf	19,f	;volatile
   776                           
   777                           ;pwm.c: 71: CCP1CONbits.CCP1M = 0b1111;
   778  00B3  300F               	movlw	15
   779  00B4  0493               	iorwf	19,f	;volatile
   780                           
   781                           ;pwm.c: 72: PSTR1CONbits.STR1SYNC = 1;
   782  00B5  1616               	bsf	22,4	;volatile
   783                           
   784                           ;pwm.c: 74: PSTR1CONbits.STR1A = 0;
   785  00B6  1016               	bcf	22,0	;volatile
   786                           
   787                           ;pwm.c: 75: PSTR1CONbits.STR1B = 0;
   788  00B7  1096               	bcf	22,1	;volatile
   789                           
   790                           ;pwm.c: 77: pwm_dt(0);
   791  00B8  3000               	movlw	0
   792  00B9  00F5               	movwf	pwm_dt@dt
   793  00BA  00F6               	movwf	pwm_dt@dt+1
   794  00BB  2018               	fcall	_pwm_dt
   795  00BC  0008               	return
   796  00BD                     __end_of_pwm_init:	
   797                           
   798                           	psect	text3
   799  0018                     __ptext3:	
   800 ;; *************** function _pwm_dt *****************
   801 ;; Defined at:
   802 ;;		line 95 in file "pwm.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;  dt              2    5[COMMON] int 
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  abs             2    7[BANK0 ] unsigned int 
   807 ;; Return value:  Size  Location     Type
   808 ;;		None               void
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1
   816 ;;      Params:         2       0       0
   817 ;;      Locals:         0       4       0
   818 ;;      Temps:          0       2       0
   819 ;;      Totals:         2       6       0
   820 ;;Total ram usage:        8 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    3
   823 ;; This function calls:
   824 ;;		_insert_dt
   825 ;; This function is called by:
   826 ;;		_main
   827 ;;		_pwm_init
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _pwm_dt
   833  0018                     _pwm_dt:	
   834                           
   835                           ;pwm.c: 96: Q16 abs = ((dt)>0?(dt):-(dt)) << 1;
   836                           
   837                           ;incstack = 0
   838                           ; Regs used in _pwm_dt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   839  0018  0876               	movf	pwm_dt@dt+1,w
   840  0019  3A80               	xorlw	128
   841  001A  0020               	movlb	0	; select bank0
   842  001B  00A3               	movwf	??_pwm_dt
   843  001C  3080               	movlw	128
   844  001D  0223               	subwf	??_pwm_dt,w
   845  001E  1D03               	skipz
   846  001F  2822               	goto	u375
   847  0020  3001               	movlw	1
   848  0021  0275               	subwf	pwm_dt@dt,w
   849  0022                     u375:	
   850  0022  1803               	skipnc
   851  0023  2831               	goto	l852
   852  0024  0975               	comf	pwm_dt@dt,w
   853  0025  0020               	movlb	0	; select bank0
   854  0026  00A3               	movwf	??_pwm_dt
   855  0027  0976               	comf	pwm_dt@dt+1,w
   856  0028  00A4               	movwf	??_pwm_dt+1
   857  0029  0AA3               	incf	??_pwm_dt,f
   858  002A  1903               	skipnz
   859  002B  0AA4               	incf	??_pwm_dt+1,f
   860  002C  0823               	movf	??_pwm_dt,w
   861  002D  00A5               	movwf	_pwm_dt$445
   862  002E  0824               	movf	??_pwm_dt+1,w
   863  002F  00A6               	movwf	_pwm_dt$445+1
   864  0030  2836               	goto	l134
   865  0031                     l852:	
   866  0031  0876               	movf	pwm_dt@dt+1,w
   867  0032  0020               	movlb	0	; select bank0
   868  0033  00A6               	movwf	_pwm_dt$445+1
   869  0034  0875               	movf	pwm_dt@dt,w
   870  0035  00A5               	movwf	_pwm_dt$445
   871  0036                     l134:	
   872  0036  3525               	lslf	_pwm_dt$445,w
   873  0037  00A7               	movwf	pwm_dt@abs
   874  0038  0D26               	rlf	_pwm_dt$445+1,w
   875  0039  00A8               	movwf	pwm_dt@abs+1
   876                           
   877                           ;pwm.c: 101: w.dir = dt < 0;
   878  003A  1FF6               	btfss	pwm_dt@dt+1,7
   879  003B  283E               	goto	u380
   880  003C  1478               	bsf	_w,0
   881  003D  283F               	goto	l856
   882  003E                     u380:	
   883  003E  1078               	bcf	_w,0
   884  003F                     l856:	
   885                           
   886                           ;pwm.c: 103: if (dt_min > abs) {
   887  003F  3000               	movlw	low (_dt_min| (0+32768))
   888  0040  0084               	movwf	4
   889  0041  3082               	movlw	high (_dt_min| (0+32768))
   890  0042  0085               	movwf	5
   891  0043  3F00               	moviw [0]fsr0
   892  0044  0020               	movlb	0	; select bank0
   893  0045  00A3               	movwf	??_pwm_dt
   894  0046  3F01               	moviw [1]fsr0
   895  0047  00A4               	movwf	??_pwm_dt+1
   896  0048  0824               	movf	??_pwm_dt+1,w
   897  0049  0228               	subwf	pwm_dt@abs+1,w
   898  004A  1D03               	skipz
   899  004B  284E               	goto	u405
   900  004C  0823               	movf	??_pwm_dt,w
   901  004D  0227               	subwf	pwm_dt@abs,w
   902  004E                     u405:	
   903  004E  1803               	skipnc
   904  004F  2852               	goto	l860
   905                           
   906                           ;pwm.c: 104: abs = 0;
   907  0050  01A7               	clrf	pwm_dt@abs
   908  0051  01A8               	clrf	pwm_dt@abs+1
   909  0052                     l860:	
   910                           
   911                           ;pwm.c: 105: }
   912                           ;pwm.c: 107: if (w.dir != w.ldir) {
   913  0052  0C78               	rrf	_w,w
   914  0053  3901               	andlw	1
   915  0054  00A3               	movwf	??_pwm_dt
   916  0055  0878               	movf	_w,w
   917  0056  3901               	andlw	1
   918  0057  0623               	xorwf	??_pwm_dt,w
   919  0058  1903               	skipnz
   920  0059  286E               	goto	l870
   921                           
   922                           ;pwm.c: 108: PIR1bits.TMR2IF = 0;
   923  005A  1091               	bcf	17,1	;volatile
   924  005B                     l137:	
   925                           ;pwm.c: 109: while (!PIR1bits.TMR2IF);
   926                           
   927  005B  1C91               	btfss	17,1	;volatile
   928  005C  285B               	goto	l137
   929                           
   930                           ;pwm.c: 110: TRISA5 = 1;
   931  005D  0021               	movlb	1	; select bank1
   932  005E  168C               	bsf	12,5	;volatile
   933                           
   934                           ;pwm.c: 111: TRISA0 = 1;
   935  005F  140C               	bsf	12,0	;volatile
   936                           
   937                           ;pwm.c: 112: w.dir ? insert_dt(0xFFFF) : insert_dt(0);
   938  0060  1C78               	btfss	_w,0
   939  0061  2866               	goto	l866
   940  0062  30FF               	movlw	255
   941  0063  00F3               	movwf	insert_dt@var
   942  0064  30FF               	movlw	255
   943  0065  2868               	goto	L1
   944  0066                     l866:	
   945  0066  3000               	movlw	0
   946  0067  00F3               	movwf	insert_dt@var
   947  0068                     L1:	
   948  0068  00F4               	movwf	insert_dt@var+1
   949  0069  20D6               	fcall	_insert_dt
   950                           
   951                           ;pwm.c: 114: PIR1bits.TMR2IF = 0;
   952  006A  0020               	movlb	0	; select bank0
   953  006B  1091               	bcf	17,1	;volatile
   954  006C                     l144:	
   955                           ;pwm.c: 115: while (!PIR1bits.TMR2IF);
   956                           
   957  006C  1C91               	btfss	17,1	;volatile
   958  006D  286C               	goto	l144
   959  006E                     l870:	
   960                           
   961                           ;pwm.c: 116: }
   962                           ;pwm.c: 118: if (abs == 0) {
   963  006E  0827               	movf	pwm_dt@abs,w
   964  006F  0428               	iorwf	pwm_dt@abs+1,w
   965  0070  1D03               	btfss	3,2
   966  0071  2876               	goto	l147
   967                           
   968                           ;pwm.c: 119: TRISA5 = 1;
   969  0072  0021               	movlb	1	; select bank1
   970  0073  168C               	bsf	12,5	;volatile
   971                           
   972                           ;pwm.c: 120: TRISA0 = 1;
   973  0074  140C               	bsf	12,0	;volatile
   974                           
   975                           ;pwm.c: 121: } else if (w.dir) {
   976  0075  2891               	goto	l880
   977  0076                     l147:	
   978  0076  1C78               	btfss	_w,0
   979  0077  2881               	goto	l149
   980                           
   981                           ;pwm.c: 122: TRISA5 = 1;
   982  0078  0021               	movlb	1	; select bank1
   983  0079  168C               	bsf	12,5	;volatile
   984                           
   985                           ;pwm.c: 123: TRISA0 = 0;
   986  007A  100C               	bcf	12,0	;volatile
   987                           
   988                           ;pwm.c: 124: insert_dt(abs);
   989  007B  0020               	movlb	0	; select bank0
   990  007C  0828               	movf	pwm_dt@abs+1,w
   991  007D  00F4               	movwf	insert_dt@var+1
   992  007E  0827               	movf	pwm_dt@abs,w
   993  007F  00F3               	movwf	insert_dt@var
   994  0080  2890               	goto	L2
   995  0081                     l149:	
   996                           ;pwm.c: 125: } else {
   997                           
   998                           
   999                           ;pwm.c: 126: TRISA5 = 0;
  1000  0081  0021               	movlb	1	; select bank1
  1001  0082  128C               	bcf	12,5	;volatile
  1002                           
  1003                           ;pwm.c: 127: TRISA0 = 1;
  1004  0083  140C               	bsf	12,0	;volatile
  1005                           
  1006                           ;pwm.c: 128: insert_dt(-abs);
  1007  0084  0020               	movlb	0	; select bank0
  1008  0085  0927               	comf	pwm_dt@abs,w
  1009  0086  00A3               	movwf	??_pwm_dt
  1010  0087  0928               	comf	pwm_dt@abs+1,w
  1011  0088  00A4               	movwf	??_pwm_dt+1
  1012  0089  0AA3               	incf	??_pwm_dt,f
  1013  008A  1903               	skipnz
  1014  008B  0AA4               	incf	??_pwm_dt+1,f
  1015  008C  0823               	movf	??_pwm_dt,w
  1016  008D  00F3               	movwf	insert_dt@var
  1017  008E  0824               	movf	??_pwm_dt+1,w
  1018  008F  00F4               	movwf	insert_dt@var+1
  1019  0090                     L2:	
  1020  0090  20D6               	fcall	_insert_dt
  1021  0091                     l880:	
  1022                           
  1023                           ;pwm.c: 129: }
  1024                           ;pwm.c: 131: w.ldir = w.dir;
  1025  0091  1C78               	btfss	_w,0
  1026  0092  2895               	goto	u470
  1027  0093  14F8               	bsf	_w,1
  1028  0094  0008               	return
  1029  0095                     u470:	
  1030  0095  10F8               	bcf	_w,1
  1031  0096  0008               	return
  1032  0097                     __end_of_pwm_dt:	
  1033                           
  1034                           	psect	text4
  1035  00D6                     __ptext4:	
  1036 ;; *************** function _insert_dt *****************
  1037 ;; Defined at:
  1038 ;;		line 90 in file "pwm.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  var             2    3[COMMON] unsigned int 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1
  1052 ;;      Params:         2       0       0
  1053 ;;      Locals:         0       0       0
  1054 ;;      Temps:          0       3       0
  1055 ;;      Totals:         2       3       0
  1056 ;;Total ram usage:        5 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    2
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_pwm_dt
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function _insert_dt
  1068  00D6                     _insert_dt:	
  1069                           
  1070                           ;pwm.c: 91: CCPR1L = var >> 8;
  1071                           
  1072                           ;incstack = 0
  1073                           ; Regs used in _insert_dt: [wreg+status,2+status,0]
  1074  00D6  0874               	movf	insert_dt@var+1,w
  1075  00D7  0025               	movlb	5	; select bank5
  1076  00D8  0091               	movwf	17	;volatile
  1077                           
  1078                           ;pwm.c: 92: CCP1CONbits.DC1B = var >> 6;
  1079  00D9  0874               	movf	insert_dt@var+1,w
  1080  00DA  0020               	movlb	0	; select bank0
  1081  00DB  00A1               	movwf	??_insert_dt+1
  1082  00DC  0873               	movf	insert_dt@var,w
  1083  00DD  00A0               	movwf	??_insert_dt
  1084  00DE  3006               	movlw	6
  1085  00DF                     u365:	
  1086  00DF  36A1               	lsrf	??_insert_dt+1,f
  1087  00E0  0CA0               	rrf	??_insert_dt,f
  1088  00E1  0B89               	decfsz	9,f
  1089  00E2  28DF               	goto	u365
  1090  00E3  0820               	movf	??_insert_dt,w
  1091  00E4  00A2               	movwf	??_insert_dt+2
  1092  00E5  0EA2               	swapf	??_insert_dt+2,f
  1093  00E6  0025               	movlb	5	; select bank5
  1094  00E7  0813               	movf	19,w	;volatile
  1095  00E8  0020               	movlb	0	; select bank0
  1096  00E9  0622               	xorwf	??_insert_dt+2,w
  1097  00EA  39CF               	andlw	-49
  1098  00EB  0622               	xorwf	??_insert_dt+2,w
  1099  00EC  0025               	movlb	5	; select bank5
  1100  00ED  0093               	movwf	19	;volatile
  1101  00EE  0008               	return
  1102  00EF                     __end_of_insert_dt:	
  1103                           
  1104                           	psect	text5
  1105  0117                     __ptext5:	
  1106 ;; *************** function _clk_init *****************
  1107 ;; Defined at:
  1108 ;;		line 80 in file "pwm.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;		None               void
  1115 ;; Registers used:
  1116 ;;		wreg
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1
  1122 ;;      Params:         0       0       0
  1123 ;;      Locals:         0       0       0
  1124 ;;      Temps:          0       0       0
  1125 ;;      Totals:         0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    2
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_motor_init
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           
  1137                           ;psect for function _clk_init
  1138  0117                     _clk_init:	
  1139                           
  1140                           ;pwm.c: 82: TRISAbits.TRISA4=0;
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in _clk_init: [wreg]
  1144  0117  0021               	movlb	1	; select bank1
  1145  0118  120C               	bcf	12,4	;volatile
  1146                           
  1147                           ;pwm.c: 83: ANSELAbits.ANSA4=0;
  1148  0119  0023               	movlb	3	; select bank3
  1149  011A  120C               	bcf	12,4	;volatile
  1150                           
  1151                           ;pwm.c: 84: LATAbits.LATA4=0;
  1152  011B  0022               	movlb	2	; select bank2
  1153  011C  120C               	bcf	12,4	;volatile
  1154                           
  1155                           ;pwm.c: 86: CLKRCON=0b11001110;
  1156  011D  30CE               	movlw	206
  1157  011E  0027               	movlb	7	; select bank7
  1158  011F  009A               	movwf	26	;volatile
  1159  0120  0008               	return
  1160  0121                     __end_of_clk_init:	
  1161                           
  1162                           	psect	text6
  1163  0105                     __ptext6:	
  1164 ;; *************** function _i2c_init *****************
  1165 ;; Defined at:
  1166 ;;		line 10 in file "i2c.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  address         1    wreg     unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  address         1    3[COMMON] unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;		None               void
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1
  1180 ;;      Params:         0       0       0
  1181 ;;      Locals:         1       0       0
  1182 ;;      Temps:          0       0       0
  1183 ;;      Totals:         1       0       0
  1184 ;;Total ram usage:        1 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    2
  1187 ;; This function calls:
  1188 ;;		Nothing
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _i2c_init
  1196  0105                     _i2c_init:	
  1197                           
  1198                           ;incstack = 0
  1199                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  1200                           ;i2c_init@address stored from wreg
  1201  0105  00F3               	movwf	i2c_init@address
  1202                           
  1203                           ;i2c.c: 12: INTCON = 0b11000000;
  1204  0106  30C0               	movlw	192
  1205  0107  008B               	movwf	11	;volatile
  1206                           
  1207                           ;i2c.c: 14: SSPADD = (address << 1);
  1208  0108  3573               	lslf	i2c_init@address,w
  1209  0109  0024               	movlb	4	; select bank4
  1210  010A  0092               	movwf	18	;volatile
  1211                           
  1212                           ;i2c.c: 15: SSPSTAT = 0b10000100;
  1213  010B  3084               	movlw	132
  1214  010C  0094               	movwf	20	;volatile
  1215                           
  1216                           ;i2c.c: 16: SSPCON = 0b00110110;
  1217  010D  3036               	movlw	54
  1218  010E  0095               	movwf	21	;volatile
  1219                           
  1220                           ;i2c.c: 17: SSPCON2 = 0b10010000;
  1221  010F  3090               	movlw	144
  1222  0110  0096               	movwf	22	;volatile
  1223                           
  1224                           ;i2c.c: 18: SSPCON3 = 0;
  1225  0111  0197               	clrf	23	;volatile
  1226                           
  1227                           ;i2c.c: 20: SSP1IE = 1;
  1228  0112  0021               	movlb	1	; select bank1
  1229  0113  1591               	bsf	17,3	;volatile
  1230                           
  1231                           ;i2c.c: 21: SSP1IF = 0;
  1232  0114  0020               	movlb	0	; select bank0
  1233  0115  1191               	bcf	17,3	;volatile
  1234  0116  0008               	return
  1235  0117                     __end_of_i2c_init:	
  1236                           
  1237                           	psect	text7
  1238  0208                     __ptext7:	
  1239 ;; *************** function _i2c_get *****************
  1240 ;; Defined at:
  1241 ;;		line 41 in file "i2c.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      char 
  1248 ;; Registers used:
  1249 ;;		wreg
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1
  1255 ;;      Params:         0       0       0
  1256 ;;      Locals:         0       0       0
  1257 ;;      Temps:          0       0       0
  1258 ;;      Totals:         0       0       0
  1259 ;;Total ram usage:        0 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    2
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function _i2c_get
  1271  0208                     _i2c_get:	
  1272                           
  1273                           ;i2c.c: 42: return i2c_data;
  1274                           
  1275                           ;incstack = 0
  1276                           ; Regs used in _i2c_get: [wreg]
  1277  0208  0877               	movf	_i2c_data,w
  1278  0209  0008               	return
  1279  020A                     __end_of_i2c_get:	
  1280                           
  1281                           	psect	intentry
  1282  0004                     __pintentry:	
  1283 ;; *************** function _isr *****************
  1284 ;; Defined at:
  1285 ;;		line 53 in file "main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, pclath, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1
  1299 ;;      Params:         0       0       0
  1300 ;;      Locals:         0       0       0
  1301 ;;      Temps:          1       0       0
  1302 ;;      Totals:         1       0       0
  1303 ;;Total ram usage:        1 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		_i2c_isr
  1308 ;; This function is called by:
  1309 ;;		Interrupt level 1
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313  0004                     _isr:	
  1314                           
  1315                           ;incstack = 0
  1316                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1317  0004  3180               	pagesel	$
  1318  0005  0020               	movlb	0	; select bank0
  1319  0006  087F               	movf	127,w
  1320  0007  00F2               	movwf	??_isr
  1321                           
  1322                           ;main.c: 55: if (PIR1bits.SSP1IF){
  1323  0008  1D91               	btfss	17,3	;volatile
  1324  0009  280B               	goto	i1l28
  1325                           
  1326                           ;main.c: 56: i2c_isr();
  1327  000A  20EF               	fcall	_i2c_isr
  1328  000B                     i1l28:	
  1329  000B  0872               	movf	??_isr,w
  1330  000C  0020               	movlb	0	; select bank0
  1331  000D  00FF               	movwf	127
  1332  000E  0009               	retfie
  1333  000F                     __end_of_isr:	
  1334                           
  1335                           	psect	text9
  1336  00EF                     __ptext9:	
  1337 ;; *************** function _i2c_isr *****************
  1338 ;; Defined at:
  1339 ;;		line 26 in file "i2c.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  dammy           1    1[COMMON] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;		None               void
  1346 ;; Registers used:
  1347 ;;		wreg
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1
  1353 ;;      Params:         0       0       0
  1354 ;;      Locals:         1       0       0
  1355 ;;      Temps:          1       0       0
  1356 ;;      Totals:         2       0       0
  1357 ;;Total ram usage:        2 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_isr
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _i2c_isr
  1368  00EF                     _i2c_isr:	
  1369                           
  1370                           ;i2c.c: 27: unsigned char dammy;
  1371                           ;i2c.c: 28: if(SSP1IF){
  1372                           
  1373                           ;incstack = 0
  1374                           ; Regs used in _i2c_isr: [wreg]
  1375  00EF  0020               	movlb	0	; select bank0
  1376  00F0  1D91               	btfss	17,3	;volatile
  1377  00F1  2900               	goto	i1l724
  1378                           
  1379                           ;i2c.c: 29: if(!R_nW){
  1380  00F2  0024               	movlb	4	; select bank4
  1381  00F3  1914               	btfsc	20,2	;volatile
  1382  00F4  2900               	goto	i1l724
  1383                           
  1384                           ;i2c.c: 30: if(!D_nA){
  1385  00F5  1A94               	btfsc	20,5	;volatile
  1386  00F6  28FC               	goto	i1l722
  1387                           
  1388                           ;i2c.c: 31: dammy=SSPBUF;
  1389  00F7  0811               	movf	17,w	;volatile
  1390  00F8  00F0               	movwf	??_i2c_isr
  1391  00F9  0870               	movf	??_i2c_isr,w
  1392  00FA  00F1               	movwf	i2c_isr@dammy
  1393                           
  1394                           ;i2c.c: 32: }else{
  1395  00FB  2900               	goto	i1l724
  1396  00FC                     i1l722:	
  1397                           
  1398                           ;i2c.c: 33: i2c_data=(int8_t)SSPBUF;
  1399  00FC  0811               	movf	17,w	;volatile
  1400  00FD  00F0               	movwf	??_i2c_isr
  1401  00FE  0870               	movf	??_i2c_isr,w
  1402  00FF  00F7               	movwf	_i2c_data
  1403  0100                     i1l724:	
  1404                           
  1405                           ;i2c.c: 34: }
  1406                           ;i2c.c: 35: }
  1407                           ;i2c.c: 36: }
  1408                           ;i2c.c: 37: SSP1IF=0;
  1409  0100  0020               	movlb	0	; select bank0
  1410  0101  1191               	bcf	17,3	;volatile
  1411                           
  1412                           ;i2c.c: 38: CKP=1;
  1413  0102  0024               	movlb	4	; select bank4
  1414  0103  1615               	bsf	21,4	;volatile
  1415  0104  0008               	return
  1416  0105                     __end_of_i2c_isr:	
  1417  007E                     btemp	set	126	;btemp
  1418  007E                     wtemp	set	126
  1419  007E                     wtemp0	set	126
  1420  0080                     wtemp1	set	128
  1421  0082                     wtemp2	set	130
  1422  0084                     wtemp3	set	132
  1423  0086                     wtemp4	set	134
  1424  0088                     wtemp5	set	136
  1425  007F                     wtemp6	set	127
  1426  007E                     ttemp	set	126
  1427  007E                     ttemp0	set	126
  1428  0081                     ttemp1	set	129
  1429  0084                     ttemp2	set	132
  1430  0087                     ttemp3	set	135
  1431  007F                     ttemp4	set	127
  1432  007E                     ltemp	set	126
  1433  007E                     ltemp0	set	126
  1434  0082                     ltemp1	set	130
  1435  0086                     ltemp2	set	134
  1436  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    3
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     12      12
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwm_dt
    _pwm_init->_pwm_dt
    _pwm_dt->_insert_dt

Critical Paths under _isr in COMMON

    _isr->_i2c_isr

Critical Paths under _main in BANK0

    _main->_pwm_dt
    _pwm_init->_pwm_dt
    _pwm_dt->_insert_dt

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1645
                                              9 BANK0      3     3      0
                            _i2c_get
                           _i2c_init
                         _motor_init
                             _pwm_dt
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           0     0      0     815
                           _clk_init
                           _pwm_init
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             0     0      0     815
                             _pwm_dt
 ---------------------------------------------------------------------------------
 (1) _pwm_dt                                               8     6      2     815
                                              5 COMMON     2     0      2
                                              3 BANK0      6     6      0
                            _i2c_get (ARG)
                          _insert_dt
 ---------------------------------------------------------------------------------
 (2) _insert_dt                                            5     3      2     370
                                              3 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _clk_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_get                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  1     1      0       0
                                              2 COMMON     1     1      0
                            _i2c_isr
 ---------------------------------------------------------------------------------
 (6) _i2c_isr                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_get
   _i2c_init
   _motor_init
     _clk_init
     _pwm_init
       _pwm_dt
         _i2c_get (ARG)
         _insert_dt (ARG)
   _pwm_dt
     _i2c_get (ARG)
     _insert_dt (ARG)

 _isr (ROOT)
   _i2c_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      17       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      C       C       6       15.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      17       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 15 12:47:39 2015

                      _w 0078              __CFG_CP$OFF 0000              __CFG_LVP$ON 0000  
                    l134 0036                      l144 006C                      l137 005B  
                    l147 0076                      l149 0081                      l860 0052  
                    l852 0031                      l870 006E                      l918 00C9  
                    l880 0091                      l856 003F                      l866 0066  
                    _CKP 10AC                      u405 004E                      _PR2 001B  
           __CFG_CPD$OFF 0000                      u380 003E                      u365 00DF  
                    u470 0095                      u375 0022                      _isr 0004  
                    _ton 007A             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_IESO$ON 0000                     ?_isr 0070                     i1l28 000B  
                   _TMR0 0015                     _D_nA 10A5                     _R_nW 10A2  
           __CFG_WRT$OFF 0000                     _main 00BD                     _toff 0079  
                   fsr0h 0005                     fsr0l 0004                     indf0 0000  
                   btemp 007E                     ltemp 007E                     start 000F  
                   ttemp 007E                     wtemp 007E          __end_of_i2c_get 020A  
        __end_of_i2c_isr 0105                    ??_isr 0072            __CFG_PLLEN$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    i1l722 00FC  
                  i1l724 0100          __end_of_address 0203           __CFG_FCMEN$OFF 0000  
         __CFG_BOREN$OFF 0000                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
         __CFG_MCLRE$OFF 0000          __initialization 0010             __end_of_main 00D6  
       __end_of_i2c_init 0117                   ??_main 0029                   _CCPR1L 0291  
           i2c_isr@dammy 0071                   _INTCON 000B                   _OSCCON 0099  
                 _SSP1IE 048B                   _SSP1IF 008B                   _SSPADD 0212  
                 _TRISA0 0460                   _TRISA5 0465                   _SSPCON 0215  
                 _SSPBUF 0211                ??_i2c_get 0073                ??_i2c_isr 0070  
         __CFG_PWRTE$OFF 0000         __end_of_clk_init 0121           __CFG_STVREN$ON 0000  
                 _dt_min 0200                   _pwm_dt 0018             __pdataCOMMON 0079  
       __end_of_pwm_init 00BD  __end_of__initialization 0016           __pcstackCOMMON 0070  
         _OPTION_REGbits 0095                ?_i2c_init 0070               __pmaintext 00BD  
     __size_of_insert_dt 0019               __pintentry 0004                  ?_pwm_dt 0075  
                _CLKRCON 039A                ?_clk_init 0070                  _SSPCON2 0216  
                _SSPCON3 0217                  _SSPSTAT 0214               ??_i2c_init 0073  
                _i2c_get 0208                  _i2c_isr 00EF          i2c_init@address 0073  
              ?_pwm_init 0070                  _address 0202                  __ptext1 0203  
                __ptext2 0097                  __ptext3 0018                  __ptext4 00D6  
                __ptext5 0117                  __ptext6 0105                  __ptext7 0208  
                __ptext9 00EF          __size_of_pwm_dt 007F                _T2CONbits 001C  
           __size_of_isr 000B               ??_clk_init 0073        __end_of_insert_dt 00EF  
   end_of_initialization 0016               ??_pwm_init 0077             __pstringtext 0200  
             _motor_init 0203               _pwm_dt$445 0025         __CFG_FOSC$INTOSC 0000  
              _TRISAbits 008C              _CCP1CONbits 0293            __pidataCOMMON 0206  
         __end_of_dt_min 0202           __end_of_pwm_dt 0097      start_initialization 0010  
            __end_of_isr 000F             insert_dt@var 0073        __size_of_i2c_init 0012  
            ?_motor_init 0070                 ??_pwm_dt 0023              __pbssCOMMON 0077  
              ___latbits 0000            __pcstackBANK0 0020        __size_of_clk_init 000A  
               ?_i2c_get 0070                 ?_i2c_isr 0070        __size_of_pwm_init 0026  
    __size_of_motor_init 0003                _insert_dt 00D6                 _LATAbits 010C  
               _PIR1bits 0011                 _i2c_data 0077               ?_insert_dt 0073  
               _i2c_init 0105         __size_of_i2c_get 0002         __size_of_i2c_isr 0016  
             _APFCONbits 011D               _ANSELAbits 018C                 _clk_init 0117  
          __size_of_main 0019             _PSTR1CONbits 0296             ??_motor_init 0077  
               _pwm_init 0097                pwm_dt@abs 0027               _INTCONbits 000B  
               intlevel1 0000              ??_insert_dt 0020       __end_of_motor_init 0206  
      __CFG_CLKOUTEN$OFF 0000                 pwm_dt@dt 0075  
