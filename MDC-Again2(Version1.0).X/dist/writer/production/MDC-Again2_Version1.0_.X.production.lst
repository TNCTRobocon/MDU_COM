

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Sep 07 19:01:31 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,inline,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  0008                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  008C                     	;# 
    49  0091                     	;# 
    50  0092                     	;# 
    51  0095                     	;# 
    52  0096                     	;# 
    53  0097                     	;# 
    54  0098                     	;# 
    55  0099                     	;# 
    56  009A                     	;# 
    57  009B                     	;# 
    58  009B                     	;# 
    59  009C                     	;# 
    60  009D                     	;# 
    61  009E                     	;# 
    62  010C                     	;# 
    63  0111                     	;# 
    64  0112                     	;# 
    65  0115                     	;# 
    66  0116                     	;# 
    67  0117                     	;# 
    68  0118                     	;# 
    69  0119                     	;# 
    70  011A                     	;# 
    71  011B                     	;# 
    72  011D                     	;# 
    73  011D                     	;# 
    74  018C                     	;# 
    75  0191                     	;# 
    76  0191                     	;# 
    77  0192                     	;# 
    78  0193                     	;# 
    79  0193                     	;# 
    80  0193                     	;# 
    81  0194                     	;# 
    82  0195                     	;# 
    83  0196                     	;# 
    84  0199                     	;# 
    85  019A                     	;# 
    86  019B                     	;# 
    87  019B                     	;# 
    88  019B                     	;# 
    89  019B                     	;# 
    90  019C                     	;# 
    91  019C                     	;# 
    92  019D                     	;# 
    93  019E                     	;# 
    94  019F                     	;# 
    95  020C                     	;# 
    96  0211                     	;# 
    97  0211                     	;# 
    98  0212                     	;# 
    99  0212                     	;# 
   100  0213                     	;# 
   101  0213                     	;# 
   102  0214                     	;# 
   103  0214                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0215                     	;# 
   107  0216                     	;# 
   108  0216                     	;# 
   109  0217                     	;# 
   110  0217                     	;# 
   111  0291                     	;# 
   112  0291                     	;# 
   113  0292                     	;# 
   114  0293                     	;# 
   115  0294                     	;# 
   116  0295                     	;# 
   117  0295                     	;# 
   118  0296                     	;# 
   119  0391                     	;# 
   120  0392                     	;# 
   121  0393                     	;# 
   122  039A                     	;# 
   123  039C                     	;# 
   124  039D                     	;# 
   125  039E                     	;# 
   126  039F                     	;# 
   127  0FE4                     	;# 
   128  0FE5                     	;# 
   129  0FE6                     	;# 
   130  0FE7                     	;# 
   131  0FE8                     	;# 
   132  0FE9                     	;# 
   133  0FEA                     	;# 
   134  0FEB                     	;# 
   135  0FED                     	;# 
   136  0FEE                     	;# 
   137  0FEF                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  008C                     	;# 
   165  0091                     	;# 
   166  0092                     	;# 
   167  0095                     	;# 
   168  0096                     	;# 
   169  0097                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  010C                     	;# 
   179  0111                     	;# 
   180  0112                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0117                     	;# 
   184  0118                     	;# 
   185  0119                     	;# 
   186  011A                     	;# 
   187  011B                     	;# 
   188  011D                     	;# 
   189  011D                     	;# 
   190  018C                     	;# 
   191  0191                     	;# 
   192  0191                     	;# 
   193  0192                     	;# 
   194  0193                     	;# 
   195  0193                     	;# 
   196  0193                     	;# 
   197  0194                     	;# 
   198  0195                     	;# 
   199  0196                     	;# 
   200  0199                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  019C                     	;# 
   208  019D                     	;# 
   209  019E                     	;# 
   210  019F                     	;# 
   211  020C                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  0212                     	;# 
   215  0212                     	;# 
   216  0213                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0291                     	;# 
   228  0291                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0294                     	;# 
   232  0295                     	;# 
   233  0295                     	;# 
   234  0296                     	;# 
   235  0391                     	;# 
   236  0392                     	;# 
   237  0393                     	;# 
   238  039A                     	;# 
   239  039C                     	;# 
   240  039D                     	;# 
   241  039E                     	;# 
   242  039F                     	;# 
   243  0FE4                     	;# 
   244  0FE5                     	;# 
   245  0FE6                     	;# 
   246  0FE7                     	;# 
   247  0FE8                     	;# 
   248  0FE9                     	;# 
   249  0FEA                     	;# 
   250  0FEB                     	;# 
   251  0FED                     	;# 
   252  0FEE                     	;# 
   253  0FEF                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  008C                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  010C                     	;# 
   295  0111                     	;# 
   296  0112                     	;# 
   297  0115                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0118                     	;# 
   301  0119                     	;# 
   302  011A                     	;# 
   303  011B                     	;# 
   304  011D                     	;# 
   305  011D                     	;# 
   306  018C                     	;# 
   307  0191                     	;# 
   308  0191                     	;# 
   309  0192                     	;# 
   310  0193                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0194                     	;# 
   314  0195                     	;# 
   315  0196                     	;# 
   316  0199                     	;# 
   317  019A                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019C                     	;# 
   323  019C                     	;# 
   324  019D                     	;# 
   325  019E                     	;# 
   326  019F                     	;# 
   327  020C                     	;# 
   328  0211                     	;# 
   329  0211                     	;# 
   330  0212                     	;# 
   331  0212                     	;# 
   332  0213                     	;# 
   333  0213                     	;# 
   334  0214                     	;# 
   335  0214                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0215                     	;# 
   339  0216                     	;# 
   340  0216                     	;# 
   341  0217                     	;# 
   342  0217                     	;# 
   343  0291                     	;# 
   344  0291                     	;# 
   345  0292                     	;# 
   346  0293                     	;# 
   347  0294                     	;# 
   348  0295                     	;# 
   349  0295                     	;# 
   350  0296                     	;# 
   351  0391                     	;# 
   352  0392                     	;# 
   353  0393                     	;# 
   354  039A                     	;# 
   355  039C                     	;# 
   356  039D                     	;# 
   357  039E                     	;# 
   358  039F                     	;# 
   359  0FE4                     	;# 
   360  0FE5                     	;# 
   361  0FE6                     	;# 
   362  0FE7                     	;# 
   363  0FE8                     	;# 
   364  0FE9                     	;# 
   365  0FEA                     	;# 
   366  0FEB                     	;# 
   367  0FED                     	;# 
   368  0FEE                     	;# 
   369  0FEF                     	;# 
   370                           
   371                           	psect	idataCOMMON
   372  0130                     __pidataCOMMON:	
   373                           
   374                           ;initializer for _toff
   375  0130  3464               	retlw	100
   376                           
   377                           ;initializer for _ton
   378  0131  3464               	retlw	100
   379                           
   380                           	psect	stringtext
   381  012A                     __pstringtext:	
   382  012A                     _dt_min:	
   383  012A  3433               	retlw	51
   384  012B  3433               	retlw	51
   385  012C                     __end_of_dt_min:	
   386  012C                     _address:	
   387  012C  3439               	retlw	57
   388  012D                     __end_of_address:	
   389  000B                     _INTCON	set	11
   390  000B                     _INTCONbits	set	11
   391  0011                     _PIR1bits	set	17
   392  001B                     _PR2	set	27
   393  001C                     _T2CONbits	set	28
   394  0015                     _TMR0	set	21
   395  008B                     _SSP1IF	set	139
   396  0095                     _OPTION_REGbits	set	149
   397  0099                     _OSCCON	set	153
   398  008C                     _TRISAbits	set	140
   399  048B                     _SSP1IE	set	1163
   400  0460                     _TRISA0	set	1120
   401  0465                     _TRISA5	set	1125
   402  011D                     _APFCONbits	set	285
   403  010C                     _LATAbits	set	268
   404  018C                     _ANSELAbits	set	396
   405  0212                     _SSPADD	set	530
   406  0211                     _SSPBUF	set	529
   407  0215                     _SSPCON	set	533
   408  0216                     _SSPCON2	set	534
   409  0217                     _SSPCON3	set	535
   410  0214                     _SSPSTAT	set	532
   411  10AC                     _CKP	set	4268
   412  10A5                     _D_nA	set	4261
   413  10A2                     _R_nW	set	4258
   414  0293                     _CCP1CONbits	set	659
   415  0291                     _CCPR1L	set	657
   416  0296                     _PSTR1CONbits	set	662
   417  039A                     _CLKRCON	set	922
   418                           
   419                           ; #config settings
   420  0000                     
   421                           	psect	cinit
   422  0012                     start_initialization:	
   423  0012                     __initialization:	
   424                           
   425                           ; Clear objects allocated to COMMON
   426  0012  01F7               	clrf	__pbssCOMMON& (0+127)
   427  0013  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   428                           
   429                           ; Initialize objects allocated to COMMON
   430  0014  2130               	fcall	__pidataCOMMON	;fetch initializer
   431  0015  00F9               	movwf	__pdataCOMMON& (0+127)
   432  0016  2131               	fcall	__pidataCOMMON+1	;fetch initializer
   433  0017  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   434  0018                     end_of_initialization:	
   435                           ;End of C runtime variable initialization code
   436                           
   437  0018                     __end_of__initialization:	
   438  0018  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   439  0019  0020               	movlb	0
   440  001A  28C6               	ljmp	_main	;jump to C main() function
   441                           
   442                           	psect	bssCOMMON
   443  0077                     __pbssCOMMON:	
   444  0077                     _i2c_data:	
   445  0077                     	ds	1
   446  0078                     _w:	
   447  0078                     	ds	1
   448                           
   449                           	psect	dataCOMMON
   450  0079                     __pdataCOMMON:	
   451  0079                     _toff:	
   452  0079                     	ds	1
   453  007A                     _ton:	
   454  007A                     	ds	1
   455                           
   456                           	psect	cstackCOMMON
   457  0070                     __pcstackCOMMON:	
   458  0070                     ?_motor_init:	
   459  0070                     ?_i2c_init:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0070                     ?_i2c_isr:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0070                     ??_i2c_isr:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0070                     ?_pwm_init:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0070                     ?_clk_init:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0070                     ?_main:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0070                     ?_isr:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0070                     ?_i2c_get:	
   481                           ; 0 bytes @ 0x0
   482                           
   483                           
   484                           ; 1 bytes @ 0x0
   485  0070                     	ds	1
   486  0071                     i2c_isr@dammy:	
   487                           
   488                           ; 1 bytes @ 0x1
   489  0071                     	ds	1
   490  0072                     ??_isr:	
   491                           
   492                           ; 0 bytes @ 0x2
   493  0072                     	ds	1
   494  0073                     ??_i2c_init:	
   495  0073                     ??_i2c_get:	
   496                           ; 0 bytes @ 0x3
   497                           
   498  0073                     ??_clk_init:	
   499                           ; 0 bytes @ 0x3
   500                           
   501  0073                     ?_insert_dt:	
   502                           ; 0 bytes @ 0x3
   503                           
   504  0073                     i2c_init@address:	
   505                           ; 0 bytes @ 0x3
   506                           
   507  0073                     insert_dt@var:	
   508                           ; 1 bytes @ 0x3
   509                           
   510                           
   511                           ; 2 bytes @ 0x3
   512  0073                     	ds	2
   513  0075                     ?_pwm_dt:	
   514  0075                     pwm_dt@dt:	
   515                           ; 0 bytes @ 0x5
   516                           
   517                           
   518                           ; 2 bytes @ 0x5
   519  0075                     	ds	2
   520  0077                     ??_motor_init:	
   521  0077                     ??_pwm_init:	
   522                           ; 0 bytes @ 0x7
   523                           
   524                           
   525                           	psect	cstackBANK0
   526  0020                     __pcstackBANK0:	
   527                           ; 0 bytes @ 0x7
   528                           
   529  0020                     ??_insert_dt:	
   530                           
   531                           ; 0 bytes @ 0x0
   532  0020                     	ds	3
   533  0023                     ??_pwm_dt:	
   534                           
   535                           ; 0 bytes @ 0x3
   536  0023                     	ds	2
   537  0025                     _pwm_dt$445:	
   538                           
   539                           ; 2 bytes @ 0x5
   540  0025                     	ds	2
   541  0027                     pwm_dt@abs:	
   542                           
   543                           ; 2 bytes @ 0x7
   544  0027                     	ds	2
   545  0029                     ??_main:	
   546                           
   547                           ; 0 bytes @ 0x9
   548  0029                     	ds	3
   549                           
   550                           	psect	maintext
   551  00C6                     __pmaintext:	
   552 ;;
   553 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   554 ;;
   555 ;; *************** function _main *****************
   556 ;; Defined at:
   557 ;;		line 34 in file "main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;		None
   562 ;; Return value:  Size  Location     Type
   563 ;;		None               void
   564 ;; Registers used:
   565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : B1F/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1
   571 ;;      Params:         0       0       0
   572 ;;      Locals:         0       0       0
   573 ;;      Temps:          0       3       0
   574 ;;      Totals:         0       3       0
   575 ;;Total ram usage:        3 bytes
   576 ;; Hardware stack levels required when called:    6
   577 ;; This function calls:
   578 ;;		_i2c_get
   579 ;;		_i2c_init
   580 ;;		_motor_init
   581 ;;		_pwm_dt
   582 ;; This function is called by:
   583 ;;		Startup code after reset
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           
   588                           ;psect for function _main
   589  00C6                     _main:	
   590                           
   591                           ;main.c: 36: OSCCON=0b11110000;
   592                           
   593                           ;incstack = 0
   594                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   595  00C6  30F0               	movlw	240
   596  00C7  0021               	movlb	1	; select bank1
   597  00C8  0099               	movwf	25	;volatile
   598                           
   599                           ;main.c: 38: motor_init();
   600  00C9  212D               	fcall	_motor_init
   601                           
   602                           ;main.c: 39: i2c_init(address);
   603  00CA  302C               	movlw	low (_address| (0+32768))
   604  00CB  0084               	movwf	4
   605  00CC  3081               	movlw	high (_address| (0+32768))
   606  00CD  0085               	movwf	5
   607  00CE  0800               	movf	0,w	;code access
   608  00CF  210E               	fcall	_i2c_init
   609                           
   610                           ;main.c: 42: INTCONbits.PEIE=1;
   611  00D0  170B               	bsf	11,6	;volatile
   612                           
   613                           ;main.c: 43: INTCONbits.GIE=1;
   614  00D1  178B               	bsf	11,7	;volatile
   615  00D2                     l918:	
   616                           ;main.c: 47: while (1){
   617                           
   618                           
   619                           ;main.c: 48: pwm_dt((int16_t)i2c_get()<<8);
   620  00D2  2132               	fcall	_i2c_get
   621  00D3  0020               	movlb	0	; select bank0
   622  00D4  00A9               	movwf	??_main
   623  00D5  01AA               	clrf	??_main+1
   624  00D6  0829               	movf	??_main,w
   625  00D7  00AA               	movwf	??_main+1
   626  00D8  01A9               	clrf	??_main
   627  00D9  0829               	movf	??_main,w
   628  00DA  00F5               	movwf	pwm_dt@dt
   629  00DB  082A               	movf	??_main+1,w
   630  00DC  00F6               	movwf	pwm_dt@dt+1
   631  00DD  201B               	fcall	_pwm_dt
   632  00DE  28D2               	goto	l918
   633  00DF                     __end_of_main:	
   634                           
   635                           	psect	text1
   636  012D                     __ptext1:	
   637 ;; *************** function _motor_init *****************
   638 ;; Defined at:
   639 ;;		line 15 in file "pwm.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;		None               void
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1
   653 ;;      Params:         0       0       0
   654 ;;      Locals:         0       0       0
   655 ;;      Temps:          0       0       0
   656 ;;      Totals:         0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    5
   660 ;; This function calls:
   661 ;;		_clk_init
   662 ;;		_pwm_init
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _motor_init
   670  012D                     _motor_init:	
   671                           
   672                           ;pwm.c: 17: pwm_init();
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in _motor_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   676  012D  20A0               	fcall	_pwm_init
   677                           
   678                           ;pwm.c: 19: clk_init();
   679  012E  2120               	fcall	_clk_init
   680  012F  0008               	return
   681  0130                     __end_of_motor_init:	
   682                           
   683                           	psect	text2
   684  00A0                     __ptext2:	
   685 ;; *************** function _pwm_init *****************
   686 ;; Defined at:
   687 ;;		line 36 in file "pwm.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;		None               void
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1
   701 ;;      Params:         0       0       0
   702 ;;      Locals:         0       0       0
   703 ;;      Temps:          0       0       0
   704 ;;      Totals:         0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    4
   708 ;; This function calls:
   709 ;;		_pwm_dt
   710 ;; This function is called by:
   711 ;;		_motor_init
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _pwm_init
   717  00A0                     _pwm_init:	
   718                           
   719                           ;pwm.c: 44: TRISA5 = 1;
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _pwm_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   723  00A0  0021               	movlb	1	; select bank1
   724  00A1  168C               	bsf	12,5	;volatile
   725                           
   726                           ;pwm.c: 45: TRISA0 = 1;
   727  00A2  140C               	bsf	12,0	;volatile
   728                           
   729                           ;pwm.c: 47: ANSELAbits.ANSA0 = 0;
   730  00A3  0023               	movlb	3	; select bank3
   731  00A4  100C               	bcf	12,0	;volatile
   732                           
   733                           ;pwm.c: 50: APFCONbits.CCP1SEL = 1;
   734  00A5  0022               	movlb	2	; select bank2
   735  00A6  141D               	bsf	29,0	;volatile
   736                           
   737                           ;pwm.c: 51: APFCONbits.P1BSEL = 0;
   738  00A7  109D               	bcf	29,1	;volatile
   739                           
   740                           ;pwm.c: 53: LATAbits.LATA0 = 0;
   741  00A8  100C               	bcf	12,0	;volatile
   742                           
   743                           ;pwm.c: 54: LATAbits.LATA5 = 0;
   744  00A9  128C               	bcf	12,5	;volatile
   745                           
   746                           ;pwm.c: 59: T2CONbits.TMR2ON = 0;
   747  00AA  0020               	movlb	0	; select bank0
   748  00AB  111C               	bcf	28,2	;volatile
   749                           
   750                           ;pwm.c: 60: T2CONbits.T2OUTPS = 0;
   751  00AC  3087               	movlw	-121
   752  00AD  059C               	andwf	28,f	;volatile
   753                           
   754                           ;pwm.c: 61: T2CONbits.T2CKPS = 2;
   755  00AE  081C               	movf	28,w	;volatile
   756  00AF  39FC               	andlw	-4
   757  00B0  3802               	iorlw	2
   758  00B1  009C               	movwf	28	;volatile
   759                           
   760                           ;pwm.c: 62: PR2 = 0xFF;
   761  00B2  30FF               	movlw	255
   762  00B3  009B               	movwf	27	;volatile
   763                           
   764                           ;pwm.c: 63: T2CONbits.TMR2ON = 1;
   765  00B4  151C               	bsf	28,2	;volatile
   766                           
   767                           ;pwm.c: 69: CCP1CONbits.P1M = 0b10;
   768  00B5  0025               	movlb	5	; select bank5
   769  00B6  0813               	movf	19,w	;volatile
   770  00B7  393F               	andlw	-193
   771  00B8  3880               	iorlw	128
   772  00B9  0093               	movwf	19	;volatile
   773                           
   774                           ;pwm.c: 70: CCP1CONbits.DC1B = 0;
   775  00BA  30CF               	movlw	-49
   776  00BB  0593               	andwf	19,f	;volatile
   777                           
   778                           ;pwm.c: 71: CCP1CONbits.CCP1M = 0b1111;
   779  00BC  300F               	movlw	15
   780  00BD  0493               	iorwf	19,f	;volatile
   781                           
   782                           ;pwm.c: 72: PSTR1CONbits.STR1SYNC = 1;
   783  00BE  1616               	bsf	22,4	;volatile
   784                           
   785                           ;pwm.c: 74: PSTR1CONbits.STR1A = 0;
   786  00BF  1016               	bcf	22,0	;volatile
   787                           
   788                           ;pwm.c: 75: PSTR1CONbits.STR1B = 0;
   789  00C0  1096               	bcf	22,1	;volatile
   790                           
   791                           ;pwm.c: 77: pwm_dt(0);
   792  00C1  3000               	movlw	0
   793  00C2  00F5               	movwf	pwm_dt@dt
   794  00C3  00F6               	movwf	pwm_dt@dt+1
   795  00C4  201B               	fcall	_pwm_dt
   796  00C5  0008               	return
   797  00C6                     __end_of_pwm_init:	
   798                           
   799                           	psect	text3
   800  001B                     __ptext3:	
   801 ;; *************** function _pwm_dt *****************
   802 ;; Defined at:
   803 ;;		line 95 in file "pwm.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  dt              2    5[COMMON] int 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  abs             2    7[BANK0 ] unsigned int 
   808 ;; Return value:  Size  Location     Type
   809 ;;		None               void
   810 ;; Registers used:
   811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1
   817 ;;      Params:         2       0       0
   818 ;;      Locals:         0       4       0
   819 ;;      Temps:          0       2       0
   820 ;;      Totals:         2       6       0
   821 ;;Total ram usage:        8 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    3
   824 ;; This function calls:
   825 ;;		_insert_dt
   826 ;; This function is called by:
   827 ;;		_main
   828 ;;		_pwm_init
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _pwm_dt
   834  001B                     _pwm_dt:	
   835                           
   836                           ;pwm.c: 96: Q16 abs = ((dt)>0?(dt):-(dt)) << 1;
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in _pwm_dt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   840  001B  0876               	movf	pwm_dt@dt+1,w
   841  001C  3A80               	xorlw	128
   842  001D  0020               	movlb	0	; select bank0
   843  001E  00A3               	movwf	??_pwm_dt
   844  001F  3080               	movlw	128
   845  0020  0223               	subwf	??_pwm_dt,w
   846  0021  1D03               	skipz
   847  0022  2825               	goto	u415
   848  0023  3001               	movlw	1
   849  0024  0275               	subwf	pwm_dt@dt,w
   850  0025                     u415:	
   851  0025  1803               	skipnc
   852  0026  2834               	goto	l852
   853  0027  0975               	comf	pwm_dt@dt,w
   854  0028  0020               	movlb	0	; select bank0
   855  0029  00A3               	movwf	??_pwm_dt
   856  002A  0976               	comf	pwm_dt@dt+1,w
   857  002B  00A4               	movwf	??_pwm_dt+1
   858  002C  0AA3               	incf	??_pwm_dt,f
   859  002D  1903               	skipnz
   860  002E  0AA4               	incf	??_pwm_dt+1,f
   861  002F  0823               	movf	??_pwm_dt,w
   862  0030  00A5               	movwf	_pwm_dt$445
   863  0031  0824               	movf	??_pwm_dt+1,w
   864  0032  00A6               	movwf	_pwm_dt$445+1
   865  0033  2839               	goto	l134
   866  0034                     l852:	
   867  0034  0876               	movf	pwm_dt@dt+1,w
   868  0035  0020               	movlb	0	; select bank0
   869  0036  00A6               	movwf	_pwm_dt$445+1
   870  0037  0875               	movf	pwm_dt@dt,w
   871  0038  00A5               	movwf	_pwm_dt$445
   872  0039                     l134:	
   873  0039  3525               	lslf	_pwm_dt$445,w
   874  003A  00A7               	movwf	pwm_dt@abs
   875  003B  0D26               	rlf	_pwm_dt$445+1,w
   876  003C  00A8               	movwf	pwm_dt@abs+1
   877                           
   878                           ;pwm.c: 101: w.dir = dt < 0;
   879  003D  1FF6               	btfss	pwm_dt@dt+1,7
   880  003E  2841               	goto	u420
   881  003F  1478               	bsf	_w,0
   882  0040  2842               	goto	l856
   883  0041                     u420:	
   884  0041  1078               	bcf	_w,0
   885  0042                     l856:	
   886                           
   887                           ;pwm.c: 103: if (dt_min > abs) {
   888  0042  302A               	movlw	low (_dt_min| (0+32768))
   889  0043  0084               	movwf	4
   890  0044  3081               	movlw	high (_dt_min| (0+32768))
   891  0045  0085               	movwf	5
   892  0046  3F00               	moviw [0]fsr0
   893  0047  0020               	movlb	0	; select bank0
   894  0048  00A3               	movwf	??_pwm_dt
   895  0049  3F01               	moviw [1]fsr0
   896  004A  00A4               	movwf	??_pwm_dt+1
   897  004B  0824               	movf	??_pwm_dt+1,w
   898  004C  0228               	subwf	pwm_dt@abs+1,w
   899  004D  1D03               	skipz
   900  004E  2851               	goto	u445
   901  004F  0823               	movf	??_pwm_dt,w
   902  0050  0227               	subwf	pwm_dt@abs,w
   903  0051                     u445:	
   904  0051  1803               	skipnc
   905  0052  2855               	goto	l860
   906                           
   907                           ;pwm.c: 104: abs = 0;
   908  0053  01A7               	clrf	pwm_dt@abs
   909  0054  01A8               	clrf	pwm_dt@abs+1
   910  0055                     l860:	
   911                           
   912                           ;pwm.c: 105: }
   913                           ;pwm.c: 107: if (w.dir != w.ldir) {
   914  0055  1CF8               	btfss	_w,1
   915  0056  2859               	goto	u450
   916  0057  3001               	movlw	1
   917  0058  285A               	goto	u452
   918  0059                     u450:	
   919  0059  3000               	movlw	0
   920  005A                     u452:	
   921  005A  00A3               	movwf	??_pwm_dt
   922  005B  1C78               	btfss	_w,0
   923  005C  285F               	goto	u460
   924  005D  3001               	movlw	1
   925  005E  2860               	goto	u462
   926  005F                     u460:	
   927  005F  3000               	movlw	0
   928  0060                     u462:	
   929  0060  0623               	xorwf	??_pwm_dt,w
   930  0061  1903               	skipnz
   931  0062  2877               	goto	l870
   932                           
   933                           ;pwm.c: 108: PIR1bits.TMR2IF = 0;
   934  0063  1091               	bcf	17,1	;volatile
   935  0064                     l137:	
   936                           ;pwm.c: 109: while (!PIR1bits.TMR2IF);
   937                           
   938  0064  1C91               	btfss	17,1	;volatile
   939  0065  2864               	goto	l137
   940                           
   941                           ;pwm.c: 110: TRISA5 = 1;
   942  0066  0021               	movlb	1	; select bank1
   943  0067  168C               	bsf	12,5	;volatile
   944                           
   945                           ;pwm.c: 111: TRISA0 = 1;
   946  0068  140C               	bsf	12,0	;volatile
   947                           
   948                           ;pwm.c: 112: w.dir ? insert_dt(0xFFFF) : insert_dt(0);
   949  0069  1C78               	btfss	_w,0
   950  006A  286F               	goto	l866
   951  006B  30FF               	movlw	255
   952  006C  00F3               	movwf	insert_dt@var
   953  006D  30FF               	movlw	255
   954  006E  2871               	goto	L1
   955  006F                     l866:	
   956  006F  3000               	movlw	0
   957  0070  00F3               	movwf	insert_dt@var
   958  0071                     L1:	
   959  0071  00F4               	movwf	insert_dt@var+1
   960  0072  20DF               	fcall	_insert_dt
   961                           
   962                           ;pwm.c: 114: PIR1bits.TMR2IF = 0;
   963  0073  0020               	movlb	0	; select bank0
   964  0074  1091               	bcf	17,1	;volatile
   965  0075                     l144:	
   966                           ;pwm.c: 115: while (!PIR1bits.TMR2IF);
   967                           
   968  0075  1C91               	btfss	17,1	;volatile
   969  0076  2875               	goto	l144
   970  0077                     l870:	
   971                           
   972                           ;pwm.c: 116: }
   973                           ;pwm.c: 118: if (abs == 0) {
   974  0077  0827               	movf	pwm_dt@abs,w
   975  0078  0428               	iorwf	pwm_dt@abs+1,w
   976  0079  1D03               	btfss	3,2
   977  007A  287F               	goto	l147
   978                           
   979                           ;pwm.c: 119: TRISA5 = 1;
   980  007B  0021               	movlb	1	; select bank1
   981  007C  168C               	bsf	12,5	;volatile
   982                           
   983                           ;pwm.c: 120: TRISA0 = 1;
   984  007D  140C               	bsf	12,0	;volatile
   985                           
   986                           ;pwm.c: 121: } else if (w.dir) {
   987  007E  289A               	goto	l880
   988  007F                     l147:	
   989  007F  1C78               	btfss	_w,0
   990  0080  288A               	goto	l149
   991                           
   992                           ;pwm.c: 122: TRISA5 = 1;
   993  0081  0021               	movlb	1	; select bank1
   994  0082  168C               	bsf	12,5	;volatile
   995                           
   996                           ;pwm.c: 123: TRISA0 = 0;
   997  0083  100C               	bcf	12,0	;volatile
   998                           
   999                           ;pwm.c: 124: insert_dt(abs);
  1000  0084  0020               	movlb	0	; select bank0
  1001  0085  0828               	movf	pwm_dt@abs+1,w
  1002  0086  00F4               	movwf	insert_dt@var+1
  1003  0087  0827               	movf	pwm_dt@abs,w
  1004  0088  00F3               	movwf	insert_dt@var
  1005  0089  2899               	goto	L2
  1006  008A                     l149:	
  1007                           ;pwm.c: 125: } else {
  1008                           
  1009                           
  1010                           ;pwm.c: 126: TRISA5 = 0;
  1011  008A  0021               	movlb	1	; select bank1
  1012  008B  128C               	bcf	12,5	;volatile
  1013                           
  1014                           ;pwm.c: 127: TRISA0 = 1;
  1015  008C  140C               	bsf	12,0	;volatile
  1016                           
  1017                           ;pwm.c: 128: insert_dt(-abs);
  1018  008D  0020               	movlb	0	; select bank0
  1019  008E  0927               	comf	pwm_dt@abs,w
  1020  008F  00A3               	movwf	??_pwm_dt
  1021  0090  0928               	comf	pwm_dt@abs+1,w
  1022  0091  00A4               	movwf	??_pwm_dt+1
  1023  0092  0AA3               	incf	??_pwm_dt,f
  1024  0093  1903               	skipnz
  1025  0094  0AA4               	incf	??_pwm_dt+1,f
  1026  0095  0823               	movf	??_pwm_dt,w
  1027  0096  00F3               	movwf	insert_dt@var
  1028  0097  0824               	movf	??_pwm_dt+1,w
  1029  0098  00F4               	movwf	insert_dt@var+1
  1030  0099                     L2:	
  1031  0099  20DF               	fcall	_insert_dt
  1032  009A                     l880:	
  1033                           
  1034                           ;pwm.c: 129: }
  1035                           ;pwm.c: 131: w.ldir = w.dir;
  1036  009A  1C78               	btfss	_w,0
  1037  009B  289E               	goto	u530
  1038  009C  14F8               	bsf	_w,1
  1039  009D  0008               	return
  1040  009E                     u530:	
  1041  009E  10F8               	bcf	_w,1
  1042  009F  0008               	return
  1043  00A0                     __end_of_pwm_dt:	
  1044                           
  1045                           	psect	text4
  1046  00DF                     __ptext4:	
  1047 ;; *************** function _insert_dt *****************
  1048 ;; Defined at:
  1049 ;;		line 90 in file "pwm.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  var             2    3[COMMON] unsigned int 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;		None               void
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1
  1063 ;;      Params:         2       0       0
  1064 ;;      Locals:         0       0       0
  1065 ;;      Temps:          0       3       0
  1066 ;;      Totals:         2       3       0
  1067 ;;Total ram usage:        5 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    2
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_pwm_dt
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _insert_dt
  1079  00DF                     _insert_dt:	
  1080                           
  1081                           ;pwm.c: 91: CCPR1L = var >> 8;
  1082                           
  1083                           ;incstack = 0
  1084                           ; Regs used in _insert_dt: [wreg+status,2+status,0]
  1085  00DF  0874               	movf	insert_dt@var+1,w
  1086  00E0  0025               	movlb	5	; select bank5
  1087  00E1  0091               	movwf	17	;volatile
  1088                           
  1089                           ;pwm.c: 92: CCP1CONbits.DC1B = var >> 6;
  1090  00E2  0874               	movf	insert_dt@var+1,w
  1091  00E3  0020               	movlb	0	; select bank0
  1092  00E4  00A1               	movwf	??_insert_dt+1
  1093  00E5  0873               	movf	insert_dt@var,w
  1094  00E6  00A0               	movwf	??_insert_dt
  1095  00E7  3006               	movlw	6
  1096  00E8                     u405:	
  1097  00E8  36A1               	lsrf	??_insert_dt+1,f
  1098  00E9  0CA0               	rrf	??_insert_dt,f
  1099  00EA  0B89               	decfsz	9,f
  1100  00EB  28E8               	goto	u405
  1101  00EC  0820               	movf	??_insert_dt,w
  1102  00ED  00A2               	movwf	??_insert_dt+2
  1103  00EE  0EA2               	swapf	??_insert_dt+2,f
  1104  00EF  0025               	movlb	5	; select bank5
  1105  00F0  0813               	movf	19,w	;volatile
  1106  00F1  0020               	movlb	0	; select bank0
  1107  00F2  0622               	xorwf	??_insert_dt+2,w
  1108  00F3  39CF               	andlw	-49
  1109  00F4  0622               	xorwf	??_insert_dt+2,w
  1110  00F5  0025               	movlb	5	; select bank5
  1111  00F6  0093               	movwf	19	;volatile
  1112  00F7  0008               	return
  1113  00F8                     __end_of_insert_dt:	
  1114                           
  1115                           	psect	text5
  1116  0120                     __ptext5:	
  1117 ;; *************** function _clk_init *****************
  1118 ;; Defined at:
  1119 ;;		line 80 in file "pwm.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;		None               void
  1126 ;; Registers used:
  1127 ;;		wreg
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1
  1133 ;;      Params:         0       0       0
  1134 ;;      Locals:         0       0       0
  1135 ;;      Temps:          0       0       0
  1136 ;;      Totals:         0       0       0
  1137 ;;Total ram usage:        0 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    2
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_motor_init
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _clk_init
  1149  0120                     _clk_init:	
  1150                           
  1151                           ;pwm.c: 82: TRISAbits.TRISA4=0;
  1152                           
  1153                           ;incstack = 0
  1154                           ; Regs used in _clk_init: [wreg]
  1155  0120  0021               	movlb	1	; select bank1
  1156  0121  120C               	bcf	12,4	;volatile
  1157                           
  1158                           ;pwm.c: 83: ANSELAbits.ANSA4=0;
  1159  0122  0023               	movlb	3	; select bank3
  1160  0123  120C               	bcf	12,4	;volatile
  1161                           
  1162                           ;pwm.c: 84: LATAbits.LATA4=0;
  1163  0124  0022               	movlb	2	; select bank2
  1164  0125  120C               	bcf	12,4	;volatile
  1165                           
  1166                           ;pwm.c: 86: CLKRCON=0b11001110;
  1167  0126  30CE               	movlw	206
  1168  0127  0027               	movlb	7	; select bank7
  1169  0128  009A               	movwf	26	;volatile
  1170  0129  0008               	return
  1171  012A                     __end_of_clk_init:	
  1172                           
  1173                           	psect	text6
  1174  010E                     __ptext6:	
  1175 ;; *************** function _i2c_init *****************
  1176 ;; Defined at:
  1177 ;;		line 10 in file "i2c.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  address         1    wreg     unsigned char 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  address         1    3[COMMON] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;		None               void
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1
  1191 ;;      Params:         0       0       0
  1192 ;;      Locals:         1       0       0
  1193 ;;      Temps:          0       0       0
  1194 ;;      Totals:         1       0       0
  1195 ;;Total ram usage:        1 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    2
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _i2c_init
  1207  010E                     _i2c_init:	
  1208                           
  1209                           ;incstack = 0
  1210                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  1211                           ;i2c_init@address stored from wreg
  1212  010E  00F3               	movwf	i2c_init@address
  1213                           
  1214                           ;i2c.c: 12: INTCON = 0b11000000;
  1215  010F  30C0               	movlw	192
  1216  0110  008B               	movwf	11	;volatile
  1217                           
  1218                           ;i2c.c: 14: SSPADD = (address << 1);
  1219  0111  3573               	lslf	i2c_init@address,w
  1220  0112  0024               	movlb	4	; select bank4
  1221  0113  0092               	movwf	18	;volatile
  1222                           
  1223                           ;i2c.c: 15: SSPSTAT = 0b10000100;
  1224  0114  3084               	movlw	132
  1225  0115  0094               	movwf	20	;volatile
  1226                           
  1227                           ;i2c.c: 16: SSPCON = 0b00110110;
  1228  0116  3036               	movlw	54
  1229  0117  0095               	movwf	21	;volatile
  1230                           
  1231                           ;i2c.c: 17: SSPCON2 = 0b10010000;
  1232  0118  3090               	movlw	144
  1233  0119  0096               	movwf	22	;volatile
  1234                           
  1235                           ;i2c.c: 18: SSPCON3 = 0;
  1236  011A  0197               	clrf	23	;volatile
  1237                           
  1238                           ;i2c.c: 20: SSP1IE = 1;
  1239  011B  0021               	movlb	1	; select bank1
  1240  011C  1591               	bsf	17,3	;volatile
  1241                           
  1242                           ;i2c.c: 21: SSP1IF = 0;
  1243  011D  0020               	movlb	0	; select bank0
  1244  011E  1191               	bcf	17,3	;volatile
  1245  011F  0008               	return
  1246  0120                     __end_of_i2c_init:	
  1247                           
  1248                           	psect	text7
  1249  0132                     __ptext7:	
  1250 ;; *************** function _i2c_get *****************
  1251 ;; Defined at:
  1252 ;;		line 41 in file "i2c.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      char 
  1259 ;; Registers used:
  1260 ;;		wreg
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1
  1266 ;;      Params:         0       0       0
  1267 ;;      Locals:         0       0       0
  1268 ;;      Temps:          0       0       0
  1269 ;;      Totals:         0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    2
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _i2c_get
  1282  0132                     _i2c_get:	
  1283                           
  1284                           ;i2c.c: 42: return i2c_data;
  1285                           
  1286                           ;incstack = 0
  1287                           ; Regs used in _i2c_get: [wreg]
  1288  0132  0877               	movf	_i2c_data,w
  1289  0133  0008               	return
  1290  0134                     __end_of_i2c_get:	
  1291                           
  1292                           	psect	intentry
  1293  0004                     __pintentry:	
  1294 ;; *************** function _isr *****************
  1295 ;; Defined at:
  1296 ;;		line 54 in file "main.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;		None               void
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0, pclath, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1
  1310 ;;      Params:         0       0       0
  1311 ;;      Locals:         0       0       0
  1312 ;;      Temps:          1       0       0
  1313 ;;      Totals:         1       0       0
  1314 ;;Total ram usage:        1 bytes
  1315 ;; Hardware stack levels used:    1
  1316 ;; Hardware stack levels required when called:    1
  1317 ;; This function calls:
  1318 ;;		_i2c_isr
  1319 ;; This function is called by:
  1320 ;;		Interrupt level 1
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324  0004                     _isr:	
  1325                           
  1326                           ;incstack = 0
  1327                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1328  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1329  0005  3180               	pagesel	$
  1330  0006  0020               	movlb	0	; select bank0
  1331  0007  087F               	movf	127,w
  1332  0008  00F2               	movwf	??_isr
  1333                           
  1334                           ;main.c: 56: if (PIR1bits.SSP1IF){
  1335  0009  1D91               	btfss	17,3	;volatile
  1336  000A  280C               	goto	i1l28
  1337                           
  1338                           ;main.c: 57: i2c_isr();
  1339  000B  20F8               	fcall	_i2c_isr
  1340  000C                     i1l28:	
  1341  000C  0872               	movf	??_isr,w
  1342  000D  0020               	movlb	0	; select bank0
  1343  000E  00FF               	movwf	127
  1344  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1345  0010  0009               	retfie
  1346  0011                     __end_of_isr:	
  1347                           
  1348                           	psect	text9
  1349  00F8                     __ptext9:	
  1350 ;; *************** function _i2c_isr *****************
  1351 ;; Defined at:
  1352 ;;		line 26 in file "i2c.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  dammy           1    1[COMMON] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;		None               void
  1359 ;; Registers used:
  1360 ;;		wreg
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1
  1366 ;;      Params:         0       0       0
  1367 ;;      Locals:         1       0       0
  1368 ;;      Temps:          1       0       0
  1369 ;;      Totals:         2       0       0
  1370 ;;Total ram usage:        2 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_isr
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           
  1380                           ;psect for function _i2c_isr
  1381  00F8                     _i2c_isr:	
  1382                           
  1383                           ;i2c.c: 27: unsigned char dammy;
  1384                           ;i2c.c: 28: if(SSP1IF){
  1385                           
  1386                           ;incstack = 0
  1387                           ; Regs used in _i2c_isr: [wreg]
  1388  00F8  0020               	movlb	0	; select bank0
  1389  00F9  1D91               	btfss	17,3	;volatile
  1390  00FA  2909               	goto	i1l724
  1391                           
  1392                           ;i2c.c: 29: if(!R_nW){
  1393  00FB  0024               	movlb	4	; select bank4
  1394  00FC  1914               	btfsc	20,2	;volatile
  1395  00FD  2909               	goto	i1l724
  1396                           
  1397                           ;i2c.c: 30: if(!D_nA){
  1398  00FE  1A94               	btfsc	20,5	;volatile
  1399  00FF  2905               	goto	i1l722
  1400                           
  1401                           ;i2c.c: 31: dammy=SSPBUF;
  1402  0100  0811               	movf	17,w	;volatile
  1403  0101  00F0               	movwf	??_i2c_isr
  1404  0102  0870               	movf	??_i2c_isr,w
  1405  0103  00F1               	movwf	i2c_isr@dammy
  1406                           
  1407                           ;i2c.c: 32: }else{
  1408  0104  2909               	goto	i1l724
  1409  0105                     i1l722:	
  1410                           
  1411                           ;i2c.c: 33: i2c_data=(int8_t)SSPBUF;
  1412  0105  0811               	movf	17,w	;volatile
  1413  0106  00F0               	movwf	??_i2c_isr
  1414  0107  0870               	movf	??_i2c_isr,w
  1415  0108  00F7               	movwf	_i2c_data
  1416  0109                     i1l724:	
  1417                           
  1418                           ;i2c.c: 34: }
  1419                           ;i2c.c: 35: }
  1420                           ;i2c.c: 36: }
  1421                           ;i2c.c: 37: SSP1IF=0;
  1422  0109  0020               	movlb	0	; select bank0
  1423  010A  1191               	bcf	17,3	;volatile
  1424                           
  1425                           ;i2c.c: 38: CKP=1;
  1426  010B  0024               	movlb	4	; select bank4
  1427  010C  1615               	bsf	21,4	;volatile
  1428  010D  0008               	return
  1429  010E                     __end_of_i2c_isr:	
  1430  007E                     btemp	set	126	;btemp
  1431  007E                     int$flags	set	126
  1432  007E                     wtemp	set	126
  1433  007E                     wtemp0	set	126
  1434  0080                     wtemp1	set	128
  1435  0082                     wtemp2	set	130
  1436  0084                     wtemp3	set	132
  1437  0086                     wtemp4	set	134
  1438  0088                     wtemp5	set	136
  1439  007F                     wtemp6	set	127
  1440  007E                     ttemp	set	126
  1441  007E                     ttemp0	set	126
  1442  0081                     ttemp1	set	129
  1443  0084                     ttemp2	set	132
  1444  0087                     ttemp3	set	135
  1445  007F                     ttemp4	set	127
  1446  007E                     ltemp	set	126
  1447  007E                     ltemp0	set	126
  1448  0082                     ltemp1	set	130
  1449  0086                     ltemp2	set	134
  1450  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    3
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     12      12
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwm_dt
    _pwm_init->_pwm_dt
    _pwm_dt->_insert_dt

Critical Paths under _isr in COMMON

    _isr->_i2c_isr

Critical Paths under _main in BANK0

    _main->_pwm_dt
    _pwm_init->_pwm_dt
    _pwm_dt->_insert_dt

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1645
                                              9 BANK0      3     3      0
                            _i2c_get
                           _i2c_init
                         _motor_init
                             _pwm_dt
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           0     0      0     815
                           _clk_init
                           _pwm_init
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             0     0      0     815
                             _pwm_dt
 ---------------------------------------------------------------------------------
 (1) _pwm_dt                                               8     6      2     815
                                              5 COMMON     2     0      2
                                              3 BANK0      6     6      0
                            _i2c_get (ARG)
                          _insert_dt
 ---------------------------------------------------------------------------------
 (2) _insert_dt                                            5     3      2     370
                                              3 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _clk_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_get                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  1     1      0       0
                                              2 COMMON     1     1      0
                            _i2c_isr
 ---------------------------------------------------------------------------------
 (6) _i2c_isr                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_get
   _i2c_init
   _motor_init
     _clk_init
     _pwm_init
       _pwm_dt
         _i2c_get (ARG)
         _insert_dt (ARG)
   _pwm_dt
     _i2c_get (ARG)
     _insert_dt (ARG)

 _isr (ROOT)
   _i2c_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      17       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      C       C       6       15.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      17       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Sep 07 19:01:31 2016

                      _w 0078              __CFG_CP$OFF 0000              __CFG_LVP$ON 0000  
                    l134 0039                      l144 0075                      l137 0064  
                    l147 007F                      l149 008A                      l860 0055  
                    l852 0034                      l870 0077                      l918 00D2  
                    l880 009A                      l856 0042                      l866 006F  
                    _CKP 10AC                      u420 0041                      u405 00E8  
                    _PR2 001B                      u415 0025                      u530 009E  
                    u450 0059             __CFG_CPD$OFF 0000                      u460 005F  
                    u452 005A                      u445 0051                      u462 0060  
                    _isr 0004                      _ton 007A             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_IESO$ON 0000                     ?_isr 0070  
                   i1l28 000C                     _TMR0 0015                     _D_nA 10A5  
                   _R_nW 10A2             __CFG_WRT$OFF 0000                     _main 00C6  
                   _toff 0079                     fsr0h 0005                     fsr0l 0004  
                   indf0 0000                     btemp 007E                     ltemp 007E  
                   start 0011                     ttemp 007E                     wtemp 007E  
        __end_of_i2c_get 0134          __end_of_i2c_isr 010E                    ??_isr 0072  
          __CFG_PLLEN$ON 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  i1l722 0105                    i1l724 0109          __end_of_address 012D  
         __CFG_FCMEN$OFF 0000           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 0012  
           __end_of_main 00DF         __end_of_i2c_init 0120                   ??_main 0029  
                 _CCPR1L 0291             i2c_isr@dammy 0071                   _INTCON 000B  
                 _OSCCON 0099                   _SSP1IE 048B                   _SSP1IF 008B  
                 _SSPADD 0212                   _TRISA0 0460                   _TRISA5 0465  
                 _SSPCON 0215                   _SSPBUF 0211                ??_i2c_get 0073  
              ??_i2c_isr 0070           __CFG_PWRTE$OFF 0000         __end_of_clk_init 012A  
         __CFG_STVREN$ON 0000                   _dt_min 012A                   _pwm_dt 001B  
           __pdataCOMMON 0079         __end_of_pwm_init 00C6  __end_of__initialization 0018  
         __pcstackCOMMON 0070           _OPTION_REGbits 0095                ?_i2c_init 0070  
             __pmaintext 00C6       __size_of_insert_dt 0019               __pintentry 0004  
                ?_pwm_dt 0075                  _CLKRCON 039A                ?_clk_init 0070  
                _SSPCON2 0216                  _SSPCON3 0217                  _SSPSTAT 0214  
             ??_i2c_init 0073                  _i2c_get 0132                  _i2c_isr 00F8  
        i2c_init@address 0073                ?_pwm_init 0070                  _address 012C  
                __ptext1 012D                  __ptext2 00A0                  __ptext3 001B  
                __ptext4 00DF                  __ptext5 0120                  __ptext6 010E  
                __ptext7 0132                  __ptext9 00F8          __size_of_pwm_dt 0085  
              _T2CONbits 001C             __size_of_isr 000D               ??_clk_init 0073  
      __end_of_insert_dt 00F8     end_of_initialization 0018               ??_pwm_init 0077  
           __pstringtext 012A               _motor_init 012D               _pwm_dt$445 0025  
       __CFG_FOSC$INTOSC 0000                _TRISAbits 008C              _CCP1CONbits 0293  
          __pidataCOMMON 0130           __end_of_dt_min 012C           __end_of_pwm_dt 00A0  
    start_initialization 0012              __end_of_isr 0011             insert_dt@var 0073  
      __size_of_i2c_init 0012              ?_motor_init 0070                 ??_pwm_dt 0023  
            __pbssCOMMON 0077                ___latbits 0000            __pcstackBANK0 0020  
      __size_of_clk_init 000A                 ?_i2c_get 0070                 ?_i2c_isr 0070  
      __size_of_pwm_init 0026      __size_of_motor_init 0003                _insert_dt 00DF  
               _LATAbits 010C                 _PIR1bits 0011                 _i2c_data 0077  
             ?_insert_dt 0073                 _i2c_init 010E         __size_of_i2c_get 0002  
       __size_of_i2c_isr 0016               _APFCONbits 011D               _ANSELAbits 018C  
               _clk_init 0120            __size_of_main 0019             _PSTR1CONbits 0296  
               int$flags 007E             ??_motor_init 0077                 _pwm_init 00A0  
              pwm_dt@abs 0027               _INTCONbits 000B                 intlevel1 0000  
            ??_insert_dt 0020       __end_of_motor_init 0130        __CFG_CLKOUTEN$OFF 0000  
               pwm_dt@dt 0075  
