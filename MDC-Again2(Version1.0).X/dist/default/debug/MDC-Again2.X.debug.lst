

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Sep 15 10:17:08 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     	;# 
    27  0001                     	;# 
    28  0002                     	;# 
    29  0003                     	;# 
    30  0004                     	;# 
    31  0005                     	;# 
    32  0006                     	;# 
    33  0007                     	;# 
    34  0008                     	;# 
    35  0009                     	;# 
    36  000A                     	;# 
    37  000B                     	;# 
    38  000C                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  008C                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0095                     	;# 
    56  0096                     	;# 
    57  0097                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  010C                     	;# 
    67  0111                     	;# 
    68  0112                     	;# 
    69  0115                     	;# 
    70  0116                     	;# 
    71  0117                     	;# 
    72  0118                     	;# 
    73  0119                     	;# 
    74  011A                     	;# 
    75  011B                     	;# 
    76  011D                     	;# 
    77  011D                     	;# 
    78  018C                     	;# 
    79  0191                     	;# 
    80  0191                     	;# 
    81  0192                     	;# 
    82  0193                     	;# 
    83  0193                     	;# 
    84  0193                     	;# 
    85  0194                     	;# 
    86  0195                     	;# 
    87  0196                     	;# 
    88  0199                     	;# 
    89  019A                     	;# 
    90  019B                     	;# 
    91  019B                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019C                     	;# 
    95  019C                     	;# 
    96  019D                     	;# 
    97  019E                     	;# 
    98  019F                     	;# 
    99  020C                     	;# 
   100  0211                     	;# 
   101  0211                     	;# 
   102  0212                     	;# 
   103  0212                     	;# 
   104  0213                     	;# 
   105  0213                     	;# 
   106  0214                     	;# 
   107  0214                     	;# 
   108  0215                     	;# 
   109  0215                     	;# 
   110  0215                     	;# 
   111  0216                     	;# 
   112  0216                     	;# 
   113  0217                     	;# 
   114  0217                     	;# 
   115  0291                     	;# 
   116  0291                     	;# 
   117  0292                     	;# 
   118  0293                     	;# 
   119  0294                     	;# 
   120  0295                     	;# 
   121  0295                     	;# 
   122  0296                     	;# 
   123  0391                     	;# 
   124  0392                     	;# 
   125  0393                     	;# 
   126  039A                     	;# 
   127  039C                     	;# 
   128  039D                     	;# 
   129  039E                     	;# 
   130  039F                     	;# 
   131  0FE4                     	;# 
   132  0FE5                     	;# 
   133  0FE6                     	;# 
   134  0FE7                     	;# 
   135  0FE8                     	;# 
   136  0FE9                     	;# 
   137  0FEA                     	;# 
   138  0FEB                     	;# 
   139  0FED                     	;# 
   140  0FEE                     	;# 
   141  0FEF                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  008C                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0095                     	;# 
   172  0096                     	;# 
   173  0097                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009A                     	;# 
   177  009B                     	;# 
   178  009B                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  010C                     	;# 
   183  0111                     	;# 
   184  0112                     	;# 
   185  0115                     	;# 
   186  0116                     	;# 
   187  0117                     	;# 
   188  0118                     	;# 
   189  0119                     	;# 
   190  011A                     	;# 
   191  011B                     	;# 
   192  011D                     	;# 
   193  011D                     	;# 
   194  018C                     	;# 
   195  0191                     	;# 
   196  0191                     	;# 
   197  0192                     	;# 
   198  0193                     	;# 
   199  0193                     	;# 
   200  0193                     	;# 
   201  0194                     	;# 
   202  0195                     	;# 
   203  0196                     	;# 
   204  0199                     	;# 
   205  019A                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019B                     	;# 
   210  019C                     	;# 
   211  019C                     	;# 
   212  019D                     	;# 
   213  019E                     	;# 
   214  019F                     	;# 
   215  020C                     	;# 
   216  0211                     	;# 
   217  0211                     	;# 
   218  0212                     	;# 
   219  0212                     	;# 
   220  0213                     	;# 
   221  0213                     	;# 
   222  0214                     	;# 
   223  0214                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0216                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0217                     	;# 
   231  0291                     	;# 
   232  0291                     	;# 
   233  0292                     	;# 
   234  0293                     	;# 
   235  0294                     	;# 
   236  0295                     	;# 
   237  0295                     	;# 
   238  0296                     	;# 
   239  0391                     	;# 
   240  0392                     	;# 
   241  0393                     	;# 
   242  039A                     	;# 
   243  039C                     	;# 
   244  039D                     	;# 
   245  039E                     	;# 
   246  039F                     	;# 
   247  0FE4                     	;# 
   248  0FE5                     	;# 
   249  0FE6                     	;# 
   250  0FE7                     	;# 
   251  0FE8                     	;# 
   252  0FE9                     	;# 
   253  0FEA                     	;# 
   254  0FEB                     	;# 
   255  0FED                     	;# 
   256  0FEE                     	;# 
   257  0FEF                     	;# 
   258  0000                     	;# 
   259  0001                     	;# 
   260  0002                     	;# 
   261  0003                     	;# 
   262  0004                     	;# 
   263  0005                     	;# 
   264  0006                     	;# 
   265  0007                     	;# 
   266  0008                     	;# 
   267  0009                     	;# 
   268  000A                     	;# 
   269  000B                     	;# 
   270  000C                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  008C                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  010C                     	;# 
   299  0111                     	;# 
   300  0112                     	;# 
   301  0115                     	;# 
   302  0116                     	;# 
   303  0117                     	;# 
   304  0118                     	;# 
   305  0119                     	;# 
   306  011A                     	;# 
   307  011B                     	;# 
   308  011D                     	;# 
   309  011D                     	;# 
   310  018C                     	;# 
   311  0191                     	;# 
   312  0191                     	;# 
   313  0192                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0193                     	;# 
   317  0194                     	;# 
   318  0195                     	;# 
   319  0196                     	;# 
   320  0199                     	;# 
   321  019A                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019C                     	;# 
   327  019C                     	;# 
   328  019D                     	;# 
   329  019E                     	;# 
   330  019F                     	;# 
   331  020C                     	;# 
   332  0211                     	;# 
   333  0211                     	;# 
   334  0212                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0213                     	;# 
   338  0214                     	;# 
   339  0214                     	;# 
   340  0215                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0216                     	;# 
   344  0216                     	;# 
   345  0217                     	;# 
   346  0217                     	;# 
   347  0291                     	;# 
   348  0291                     	;# 
   349  0292                     	;# 
   350  0293                     	;# 
   351  0294                     	;# 
   352  0295                     	;# 
   353  0295                     	;# 
   354  0296                     	;# 
   355  0391                     	;# 
   356  0392                     	;# 
   357  0393                     	;# 
   358  039A                     	;# 
   359  039C                     	;# 
   360  039D                     	;# 
   361  039E                     	;# 
   362  039F                     	;# 
   363  0FE4                     	;# 
   364  0FE5                     	;# 
   365  0FE6                     	;# 
   366  0FE7                     	;# 
   367  0FE8                     	;# 
   368  0FE9                     	;# 
   369  0FEA                     	;# 
   370  0FEB                     	;# 
   371  0FED                     	;# 
   372  0FEE                     	;# 
   373  0FEF                     	;# 
   374                           
   375                           	psect	idataCOMMON
   376  0206                     __pidataCOMMON:	
   377                           
   378                           ;initializer for _toff
   379  0206  3464               	retlw	100
   380                           
   381                           ;initializer for _ton
   382  0207  3464               	retlw	100
   383                           
   384                           	psect	stringtext
   385  0200                     __pstringtext:	
   386  0200                     _dt_min:	
   387  0200  3400               	retlw	0
   388  0201  3400               	retlw	0
   389  0202                     __end_of_dt_min:	
   390  0202                     _address:	
   391  0202  3464               	retlw	100
   392  0203                     __end_of_address:	
   393  000B                     _INTCON	set	11
   394  000B                     _INTCONbits	set	11
   395  0011                     _PIR1bits	set	17
   396  001B                     _PR2	set	27
   397  001C                     _T2CONbits	set	28
   398  0015                     _TMR0	set	21
   399  005F                     _GIE	set	95
   400  008B                     _SSP1IF	set	139
   401  0095                     _OPTION_REGbits	set	149
   402  0099                     _OSCCON	set	153
   403  008C                     _TRISAbits	set	140
   404  048B                     _SSP1IE	set	1163
   405  0460                     _TRISA0	set	1120
   406  0465                     _TRISA5	set	1125
   407  011D                     _APFCONbits	set	285
   408  010C                     _LATAbits	set	268
   409  018C                     _ANSELAbits	set	396
   410  0212                     _SSPADD	set	530
   411  0211                     _SSPBUF	set	529
   412  0215                     _SSPCON	set	533
   413  0216                     _SSPCON2	set	534
   414  0217                     _SSPCON3	set	535
   415  0214                     _SSPSTAT	set	532
   416  10AC                     _CKP	set	4268
   417  10A5                     _D_nA	set	4261
   418  10A2                     _R_nW	set	4258
   419  0293                     _CCP1CONbits	set	659
   420  0291                     _CCPR1L	set	657
   421  0296                     _PSTR1CONbits	set	662
   422                           
   423                           ; #config settings
   424  0000                     
   425                           	psect	cinit
   426  0017                     start_initialization:	
   427  0017                     __initialization:	
   428                           
   429                           ; Clear objects allocated to COMMON
   430  0017  01FA               	clrf	__pbssCOMMON& (0+127)
   431                           
   432                           ; Clear objects allocated to BANK0
   433  0018  01AC               	clrf	__pbssBANK0& (0+127)
   434                           
   435                           ; Initialize objects allocated to COMMON
   436  0019  2206               	fcall	__pidataCOMMON	;fetch initializer
   437  001A  00F8               	movwf	__pdataCOMMON& (0+127)
   438  001B  2207               	fcall	__pidataCOMMON+1	;fetch initializer
   439  001C  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   440  001D                     end_of_initialization:	
   441                           ;End of C runtime variable initialization code
   442                           
   443  001D                     __end_of__initialization:	
   444  001D  0020               	movlb	0
   445  001E  28E3               	ljmp	_main	;jump to C main() function
   446                           
   447                           	psect	bssCOMMON
   448  007A                     __pbssCOMMON:	
   449  007A                     _w:	
   450  007A                     	ds	1
   451                           
   452                           	psect	dataCOMMON
   453  0078                     __pdataCOMMON:	
   454  0078                     _toff:	
   455  0078                     	ds	1
   456  0079                     _ton:	
   457  0079                     	ds	1
   458                           
   459                           	psect	bssBANK0
   460  002C                     __pbssBANK0:	
   461  002C                     _i2c_data:	
   462  002C                     	ds	1
   463                           
   464                           	psect	cstackCOMMON
   465  0070                     __pcstackCOMMON:	
   466  0070                     ?_motor_init:	
   467  0070                     ?_i2c_init:	
   468                           ; 0 bytes @ 0x0
   469                           
   470  0070                     ?_i2c_isr:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ??_i2c_isr:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0070                     ?_isr_tmr:	
   477                           ; 0 bytes @ 0x0
   478                           
   479  0070                     ??_isr_tmr:	
   480                           ; 0 bytes @ 0x0
   481                           
   482  0070                     ?_pwm_init:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  0070                     ?_tmr_init:	
   486                           ; 0 bytes @ 0x0
   487                           
   488  0070                     ?_main:	
   489                           ; 0 bytes @ 0x0
   490                           
   491  0070                     ?_isr:	
   492                           ; 0 bytes @ 0x0
   493                           
   494                           
   495                           ; 0 bytes @ 0x0
   496  0070                     	ds	1
   497  0071                     i2c_isr@dammy:	
   498                           
   499                           ; 1 bytes @ 0x1
   500  0071                     	ds	1
   501  0072                     ??_isr:	
   502                           
   503                           ; 0 bytes @ 0x2
   504  0072                     	ds	1
   505  0073                     ??_i2c_init:	
   506  0073                     ??_tmr_init:	
   507                           ; 0 bytes @ 0x3
   508                           
   509  0073                     ?_insert_dt:	
   510                           ; 0 bytes @ 0x3
   511                           
   512  0073                     ?___wmul:	
   513                           ; 0 bytes @ 0x3
   514                           
   515  0073                     i2c_init@address:	
   516                           ; 2 bytes @ 0x3
   517                           
   518  0073                     insert_dt@var:	
   519                           ; 1 bytes @ 0x3
   520                           
   521  0073                     ___wmul@multiplier:	
   522                           ; 2 bytes @ 0x3
   523                           
   524                           
   525                           ; 2 bytes @ 0x3
   526  0073                     	ds	2
   527  0075                     ??_insert_dt:	
   528  0075                     ___wmul@multiplicand:	
   529                           ; 0 bytes @ 0x5
   530                           
   531                           
   532                           ; 2 bytes @ 0x5
   533  0075                     	ds	2
   534  0077                     ?_tmr_cycle:	
   535  0077                     ??___wmul:	
   536                           ; 0 bytes @ 0x7
   537                           
   538  0077                     tmr_cycle@cycle:	
   539                           ; 0 bytes @ 0x7
   540                           
   541                           
   542                           ; 1 bytes @ 0x7
   543  0077                     	ds	1
   544  0078                     ??_motor_init:	
   545  0078                     ??_pwm_init:	
   546                           ; 0 bytes @ 0x8
   547                           
   548                           
   549                           	psect	cstackBANK0
   550  0020                     __pcstackBANK0:	
   551                           ; 0 bytes @ 0x8
   552                           
   553  0020                     ?_pwm_dt:	
   554  0020                     pwm_dt@dt:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0020                     ___wmul@product:	
   558                           ; 2 bytes @ 0x0
   559                           
   560                           
   561                           ; 2 bytes @ 0x0
   562  0020                     	ds	2
   563  0022                     ??_pwm_dt:	
   564  0022                     ??_tmr_cycle:	
   565                           ; 0 bytes @ 0x2
   566                           
   567                           
   568                           ; 0 bytes @ 0x2
   569  0022                     	ds	1
   570  0023                     tmr_cycle@on:	
   571                           
   572                           ; 1 bytes @ 0x3
   573  0023                     	ds	1
   574  0024                     ?_tmr_dt:	
   575  0024                     tmr_dt@cycle:	
   576                           ; 0 bytes @ 0x4
   577                           
   578  0024                     _pwm_dt$456:	
   579                           ; 1 bytes @ 0x4
   580                           
   581                           
   582                           ; 2 bytes @ 0x4
   583  0024                     	ds	1
   584  0025                     ??_tmr_dt:	
   585                           
   586                           ; 0 bytes @ 0x5
   587  0025                     	ds	1
   588  0026                     pwm_dt@abs:	
   589                           
   590                           ; 2 bytes @ 0x6
   591  0026                     	ds	4
   592  002A                     tmr_dt@dt:	
   593                           
   594                           ; 1 bytes @ 0xA
   595  002A                     	ds	1
   596  002B                     ??_main:	
   597                           
   598                           ; 0 bytes @ 0xB
   599  002B                     	ds	1
   600                           
   601                           	psect	maintext
   602  00E3                     __pmaintext:	
   603 ;;
   604 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   605 ;;
   606 ;; *************** function _main *****************
   607 ;; Defined at:
   608 ;;		line 33 in file "main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;		None               void
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : B1F/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1
   622 ;;      Params:         0       0       0
   623 ;;      Locals:         0       0       0
   624 ;;      Temps:          0       1       0
   625 ;;      Totals:         0       1       0
   626 ;;Total ram usage:        1 bytes
   627 ;; Hardware stack levels required when called:    6
   628 ;; This function calls:
   629 ;;		_i2c_init
   630 ;;		_motor_init
   631 ;;		_pwm_dt
   632 ;;		_tmr_dt
   633 ;; This function is called by:
   634 ;;		Startup code after reset
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _main
   640  00E3                     _main:	
   641                           
   642                           ;main.c: 35: OSCCON=0b11110000;
   643                           
   644                           ;incstack = 0
   645                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   646  00E3  30F0               	movlw	240
   647  00E4  0021               	movlb	1	; select bank1
   648  00E5  0099               	movwf	25	;volatile
   649                           
   650                           ;main.c: 37: motor_init();
   651  00E6  2203               	fcall	_motor_init
   652                           
   653                           ;main.c: 38: i2c_init(address);
   654  00E7  3002               	movlw	low (_address| (0+32768))
   655  00E8  0084               	movwf	4
   656  00E9  3082               	movlw	high (_address| (0+32768))
   657  00EA  0085               	movwf	5
   658  00EB  0800               	movf	0,w	;code access
   659  00EC  2158               	fcall	_i2c_init
   660                           
   661                           ;main.c: 41: INTCONbits.PEIE=1;
   662  00ED  170B               	bsf	11,6	;volatile
   663                           
   664                           ;main.c: 42: INTCONbits.GIE=1;
   665  00EE  178B               	bsf	11,7	;volatile
   666                           
   667                           ;main.c: 44: tmr_dt((uint8_t)((float)(0.25f)*(255)),200);
   668  00EF  30C8               	movlw	200
   669  00F0  0020               	movlb	0	; select bank0
   670  00F1  00AB               	movwf	??_main
   671  00F2  082B               	movf	??_main,w
   672  00F3  00A4               	movwf	tmr_dt@cycle
   673  00F4  303F               	movlw	63
   674  00F5  20FD               	fcall	_tmr_dt
   675  00F6                     l1006:	
   676                           ;main.c: 46: while (1){
   677                           
   678                           
   679                           ;main.c: 47: pwm_dt((int16_t)((float)(-0.25f)*(32767)));
   680  00F6  3001               	movlw	1
   681  00F7  0020               	movlb	0	; select bank0
   682  00F8  00A0               	movwf	pwm_dt@dt
   683  00F9  30E0               	movlw	224
   684  00FA  00A1               	movwf	pwm_dt@dt+1
   685  00FB  201F               	fcall	_pwm_dt
   686  00FC  28F6               	goto	l1006
   687  00FD                     __end_of_main:	
   688                           
   689                           	psect	text1
   690  00FD                     __ptext1:	
   691 ;; *************** function _tmr_dt *****************
   692 ;; Defined at:
   693 ;;		line 129 in file "pwm.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;  dt              1    wreg     unsigned char 
   696 ;;  cycle           1    4[BANK0 ] unsigned char 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  dt              1   10[BANK0 ] unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;		None               void
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, pclath, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1
   708 ;;      Params:         0       1       0
   709 ;;      Locals:         0       1       0
   710 ;;      Temps:          0       5       0
   711 ;;      Totals:         0       7       0
   712 ;;Total ram usage:        7 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    3
   715 ;; This function calls:
   716 ;;		___wmul
   717 ;;		_tmr_cycle
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _tmr_dt
   725  00FD                     _tmr_dt:	
   726                           
   727                           ;incstack = 0
   728                           ; Regs used in _tmr_dt: [wreg+status,2+status,0+pclath+cstack]
   729                           ;tmr_dt@dt stored from wreg
   730  00FD  0020               	movlb	0	; select bank0
   731  00FE  00AA               	movwf	tmr_dt@dt
   732                           
   733                           ;pwm.c: 130: tmr_cycle((uint16_t)dt*cycle>>8,cycle);
   734  00FF  0824               	movf	tmr_dt@cycle,w
   735  0100  00A5               	movwf	??_tmr_dt
   736  0101  0825               	movf	??_tmr_dt,w
   737  0102  00F7               	movwf	tmr_cycle@cycle
   738  0103  082A               	movf	tmr_dt@dt,w
   739  0104  00A6               	movwf	??_tmr_dt+1
   740  0105  01A7               	clrf	??_tmr_dt+2
   741  0106  0826               	movf	??_tmr_dt+1,w
   742  0107  00F3               	movwf	___wmul@multiplier
   743  0108  0827               	movf	??_tmr_dt+2,w
   744  0109  00F4               	movwf	___wmul@multiplier+1
   745  010A  0824               	movf	tmr_dt@cycle,w
   746  010B  00A8               	movwf	??_tmr_dt+3
   747  010C  01A9               	clrf	??_tmr_dt+4
   748  010D  0828               	movf	??_tmr_dt+3,w
   749  010E  00F5               	movwf	___wmul@multiplicand
   750  010F  0829               	movf	??_tmr_dt+4,w
   751  0110  00F6               	movwf	___wmul@multiplicand+1
   752  0111  20C5               	fcall	___wmul
   753  0112  0874               	movf	?___wmul+1,w
   754  0113  2178               	fcall	_tmr_cycle
   755  0114  0008               	return
   756  0115                     __end_of_tmr_dt:	
   757                           
   758                           	psect	text2
   759  0178                     __ptext2:	
   760 ;; *************** function _tmr_cycle *****************
   761 ;; Defined at:
   762 ;;		line 124 in file "pwm.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  on              1    wreg     unsigned char 
   765 ;;  cycle           1    7[COMMON] unsigned char 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  on              1    3[BANK0 ] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;		None               void
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1
   777 ;;      Params:         1       0       0
   778 ;;      Locals:         0       1       0
   779 ;;      Temps:          0       1       0
   780 ;;      Totals:         1       2       0
   781 ;;Total ram usage:        3 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    2
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_tmr_dt
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function _tmr_cycle
   793  0178                     _tmr_cycle:	
   794                           
   795                           ;incstack = 0
   796                           ; Regs used in _tmr_cycle: [wreg+status,2+status,0]
   797                           ;tmr_cycle@on stored from wreg
   798  0178  0020               	movlb	0	; select bank0
   799  0179  00A3               	movwf	tmr_cycle@on
   800                           
   801                           ;pwm.c: 125: ton=on;
   802  017A  0823               	movf	tmr_cycle@on,w
   803  017B  00A2               	movwf	??_tmr_cycle
   804  017C  0822               	movf	??_tmr_cycle,w
   805  017D  00F9               	movwf	_ton
   806                           
   807                           ;pwm.c: 126: toff=cycle-on;
   808  017E  0323               	decf	tmr_cycle@on,w
   809  017F  3AFF               	xorlw	255
   810  0180  0777               	addwf	tmr_cycle@cycle,w
   811  0181  00A2               	movwf	??_tmr_cycle
   812  0182  0822               	movf	??_tmr_cycle,w
   813  0183  00F8               	movwf	_toff
   814  0184  0008               	return
   815  0185                     __end_of_tmr_cycle:	
   816                           
   817                           	psect	text3
   818  00C5                     __ptext3:	
   819 ;; *************** function ___wmul *****************
   820 ;; Defined at:
   821 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  multiplier      2    3[COMMON] unsigned int 
   824 ;;  multiplicand    2    5[COMMON] unsigned int 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  product         2    0[BANK0 ] unsigned int 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  2    3[COMMON] unsigned int 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1
   836 ;;      Params:         4       0       0
   837 ;;      Locals:         0       2       0
   838 ;;      Temps:          0       0       0
   839 ;;      Totals:         4       2       0
   840 ;;Total ram usage:        6 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    2
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_tmr_dt
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           
   851                           ;psect for function ___wmul
   852  00C5                     ___wmul:	
   853                           
   854                           ;incstack = 0
   855                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   856  00C5  0020               	movlb	0	; select bank0
   857  00C6  01A0               	clrf	___wmul@product
   858  00C7  01A1               	clrf	___wmul@product+1
   859  00C8                     l976:	
   860  00C8  1C73               	btfss	___wmul@multiplier,0
   861  00C9  28CF               	goto	l246
   862  00CA  0875               	movf	___wmul@multiplicand,w
   863  00CB  0020               	movlb	0	; select bank0
   864  00CC  07A0               	addwf	___wmul@product,f
   865  00CD  0876               	movf	___wmul@multiplicand+1,w
   866  00CE  3DA1               	addwfc	___wmul@product+1,f
   867  00CF                     l246:	
   868  00CF  3001               	movlw	1
   869  00D0                     u635:	
   870  00D0  35F5               	lslf	___wmul@multiplicand,f
   871  00D1  0DF6               	rlf	___wmul@multiplicand+1,f
   872  00D2  0B89               	decfsz	9,f
   873  00D3  28D0               	goto	u635
   874  00D4  3001               	movlw	1
   875  00D5                     u645:	
   876  00D5  36F4               	lsrf	___wmul@multiplier+1,f
   877  00D6  0CF3               	rrf	___wmul@multiplier,f
   878  00D7  0B89               	decfsz	9,f
   879  00D8  28D5               	goto	u645
   880  00D9  0873               	movf	___wmul@multiplier,w
   881  00DA  0474               	iorwf	___wmul@multiplier+1,w
   882  00DB  1D03               	btfss	3,2
   883  00DC  28C8               	goto	l976
   884  00DD  0020               	movlb	0	; select bank0
   885  00DE  0821               	movf	___wmul@product+1,w
   886  00DF  00F4               	movwf	?___wmul+1
   887  00E0  0820               	movf	___wmul@product,w
   888  00E1  00F3               	movwf	?___wmul
   889  00E2  0008               	return
   890  00E3                     __end_of___wmul:	
   891                           
   892                           	psect	text4
   893  0203                     __ptext4:	
   894 ;; *************** function _motor_init *****************
   895 ;; Defined at:
   896 ;;		line 15 in file "pwm.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;		None               void
   903 ;; Registers used:
   904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1
   910 ;;      Params:         0       0       0
   911 ;;      Locals:         0       0       0
   912 ;;      Temps:          0       0       0
   913 ;;      Totals:         0       0       0
   914 ;;Total ram usage:        0 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    5
   917 ;; This function calls:
   918 ;;		_pwm_init
   919 ;;		_tmr_init
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           
   926                           ;psect for function _motor_init
   927  0203                     _motor_init:	
   928                           
   929                           ;pwm.c: 17: pwm_init();
   930                           
   931                           ;incstack = 0
   932                           ; Regs used in _motor_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   933  0203  209E               	fcall	_pwm_init
   934                           
   935                           ;pwm.c: 18: tmr_init();
   936  0204  216A               	fcall	_tmr_init
   937  0205  0008               	return
   938  0206                     __end_of_motor_init:	
   939                           
   940                           	psect	text5
   941  016A                     __ptext5:	
   942 ;; *************** function _tmr_init *****************
   943 ;; Defined at:
   944 ;;		line 22 in file "pwm.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;		None               void
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1
   958 ;;      Params:         0       0       0
   959 ;;      Locals:         0       0       0
   960 ;;      Temps:          0       0       0
   961 ;;      Totals:         0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    2
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_motor_init
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           
   973                           ;psect for function _tmr_init
   974  016A                     _tmr_init:	
   975                           
   976                           ;pwm.c: 24: TRISAbits.TRISA4=0;
   977                           
   978                           ;incstack = 0
   979                           ; Regs used in _tmr_init: [wreg+status,2+status,0]
   980  016A  0021               	movlb	1	; select bank1
   981  016B  120C               	bcf	12,4	;volatile
   982                           
   983                           ;pwm.c: 25: ANSELAbits.ANSA4=0;
   984  016C  0023               	movlb	3	; select bank3
   985  016D  120C               	bcf	12,4	;volatile
   986                           
   987                           ;pwm.c: 26: LATAbits.LATA4=0;
   988  016E  0022               	movlb	2	; select bank2
   989  016F  120C               	bcf	12,4	;volatile
   990                           
   991                           ;pwm.c: 28: OPTION_REGbits.T0CS = 0;
   992  0170  0021               	movlb	1	; select bank1
   993  0171  1295               	bcf	21,5	;volatile
   994                           
   995                           ;pwm.c: 29: OPTION_REGbits.PSA = 1;
   996  0172  1595               	bsf	21,3	;volatile
   997                           
   998                           ;pwm.c: 30: OPTION_REGbits.PS = 0;
   999  0173  30F8               	movlw	-8
  1000  0174  0595               	andwf	21,f	;volatile
  1001                           
  1002                           ;pwm.c: 32: INTCONbits.TMR0IF = 0;
  1003  0175  110B               	bcf	11,2	;volatile
  1004                           
  1005                           ;pwm.c: 33: INTCONbits.TMR0IE = 1;
  1006  0176  168B               	bsf	11,5	;volatile
  1007  0177  0008               	return
  1008  0178                     __end_of_tmr_init:	
  1009                           
  1010                           	psect	text6
  1011  009E                     __ptext6:	
  1012 ;; *************** function _pwm_init *****************
  1013 ;; Defined at:
  1014 ;;		line 36 in file "pwm.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;		None               void
  1021 ;; Registers used:
  1022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1
  1028 ;;      Params:         0       0       0
  1029 ;;      Locals:         0       0       0
  1030 ;;      Temps:          0       0       0
  1031 ;;      Totals:         0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    4
  1035 ;; This function calls:
  1036 ;;		_pwm_dt
  1037 ;; This function is called by:
  1038 ;;		_motor_init
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _pwm_init
  1044  009E                     _pwm_init:	
  1045                           
  1046                           ;pwm.c: 44: TRISA5 = 1;
  1047                           
  1048                           ;incstack = 0
  1049                           ; Regs used in _pwm_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1050  009E  0021               	movlb	1	; select bank1
  1051  009F  168C               	bsf	12,5	;volatile
  1052                           
  1053                           ;pwm.c: 45: TRISA0 = 1;
  1054  00A0  140C               	bsf	12,0	;volatile
  1055                           
  1056                           ;pwm.c: 47: ANSELAbits.ANSA0 = 0;
  1057  00A1  0023               	movlb	3	; select bank3
  1058  00A2  100C               	bcf	12,0	;volatile
  1059                           
  1060                           ;pwm.c: 50: APFCONbits.CCP1SEL = 1;
  1061  00A3  0022               	movlb	2	; select bank2
  1062  00A4  141D               	bsf	29,0	;volatile
  1063                           
  1064                           ;pwm.c: 51: APFCONbits.P1BSEL = 0;
  1065  00A5  109D               	bcf	29,1	;volatile
  1066                           
  1067                           ;pwm.c: 53: LATAbits.LATA0 = 0;
  1068  00A6  100C               	bcf	12,0	;volatile
  1069                           
  1070                           ;pwm.c: 54: LATAbits.LATA5 = 0;
  1071  00A7  128C               	bcf	12,5	;volatile
  1072                           
  1073                           ;pwm.c: 59: T2CONbits.TMR2ON = 0;
  1074  00A8  0020               	movlb	0	; select bank0
  1075  00A9  111C               	bcf	28,2	;volatile
  1076                           
  1077                           ;pwm.c: 60: T2CONbits.T2OUTPS = 0;
  1078  00AA  3087               	movlw	-121
  1079  00AB  059C               	andwf	28,f	;volatile
  1080                           
  1081                           ;pwm.c: 61: T2CONbits.T2CKPS = 1;
  1082  00AC  081C               	movf	28,w	;volatile
  1083  00AD  39FC               	andlw	-4
  1084  00AE  3801               	iorlw	1
  1085  00AF  009C               	movwf	28	;volatile
  1086                           
  1087                           ;pwm.c: 62: PR2 = 0xFF;
  1088  00B0  30FF               	movlw	255
  1089  00B1  009B               	movwf	27	;volatile
  1090                           
  1091                           ;pwm.c: 63: T2CONbits.TMR2ON = 1;
  1092  00B2  151C               	bsf	28,2	;volatile
  1093                           
  1094                           ;pwm.c: 69: CCP1CONbits.P1M = 0b10;
  1095  00B3  0025               	movlb	5	; select bank5
  1096  00B4  0813               	movf	19,w	;volatile
  1097  00B5  393F               	andlw	-193
  1098  00B6  3880               	iorlw	128
  1099  00B7  0093               	movwf	19	;volatile
  1100                           
  1101                           ;pwm.c: 70: CCP1CONbits.DC1B = 0;
  1102  00B8  30CF               	movlw	-49
  1103  00B9  0593               	andwf	19,f	;volatile
  1104                           
  1105                           ;pwm.c: 71: CCP1CONbits.CCP1M = 0b1111;
  1106  00BA  300F               	movlw	15
  1107  00BB  0493               	iorwf	19,f	;volatile
  1108                           
  1109                           ;pwm.c: 72: PSTR1CONbits.STR1SYNC = 1;
  1110  00BC  1616               	bsf	22,4	;volatile
  1111                           
  1112                           ;pwm.c: 74: PSTR1CONbits.STR1A = 0;
  1113  00BD  1016               	bcf	22,0	;volatile
  1114                           
  1115                           ;pwm.c: 75: PSTR1CONbits.STR1B = 0;
  1116  00BE  1096               	bcf	22,1	;volatile
  1117                           
  1118                           ;pwm.c: 77: pwm_dt(0);
  1119  00BF  3000               	movlw	0
  1120  00C0  0020               	movlb	0	; select bank0
  1121  00C1  00A0               	movwf	pwm_dt@dt
  1122  00C2  00A1               	movwf	pwm_dt@dt+1
  1123  00C3  201F               	fcall	_pwm_dt
  1124  00C4  0008               	return
  1125  00C5                     __end_of_pwm_init:	
  1126                           
  1127                           	psect	text7
  1128  001F                     __ptext7:	
  1129 ;; *************** function _pwm_dt *****************
  1130 ;; Defined at:
  1131 ;;		line 85 in file "pwm.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  dt              2    0[BANK0 ] int 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  abs             2    6[BANK0 ] unsigned int 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;		None               void
  1138 ;; Registers used:
  1139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1
  1145 ;;      Params:         0       2       0
  1146 ;;      Locals:         0       4       0
  1147 ;;      Temps:          0       2       0
  1148 ;;      Totals:         0       8       0
  1149 ;;Total ram usage:        8 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    3
  1152 ;; This function calls:
  1153 ;;		_insert_dt
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;;		_pwm_init
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function _pwm_dt
  1162  001F                     _pwm_dt:	
  1163                           
  1164                           ;pwm.c: 86: Q16 abs = ((dt)>0?(dt):-(dt)) << 1;
  1165                           
  1166                           ;incstack = 0
  1167                           ; Regs used in _pwm_dt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1168  001F  0020               	movlb	0	; select bank0
  1169  0020  0821               	movf	pwm_dt@dt+1,w
  1170  0021  3A80               	xorlw	128
  1171  0022  00A2               	movwf	??_pwm_dt
  1172  0023  3080               	movlw	128
  1173  0024  0222               	subwf	??_pwm_dt,w
  1174  0025  1D03               	skipz
  1175  0026  2829               	goto	u505
  1176  0027  3001               	movlw	1
  1177  0028  0220               	subwf	pwm_dt@dt,w
  1178  0029                     u505:	
  1179  0029  1803               	skipnc
  1180  002A  2838               	goto	l918
  1181  002B  0020               	movlb	0	; select bank0
  1182  002C  0920               	comf	pwm_dt@dt,w
  1183  002D  00A2               	movwf	??_pwm_dt
  1184  002E  0921               	comf	pwm_dt@dt+1,w
  1185  002F  00A3               	movwf	??_pwm_dt+1
  1186  0030  0AA2               	incf	??_pwm_dt,f
  1187  0031  1903               	skipnz
  1188  0032  0AA3               	incf	??_pwm_dt+1,f
  1189  0033  0822               	movf	??_pwm_dt,w
  1190  0034  00A4               	movwf	_pwm_dt$456
  1191  0035  0823               	movf	??_pwm_dt+1,w
  1192  0036  00A5               	movwf	_pwm_dt$456+1
  1193  0037  283D               	goto	l134
  1194  0038                     l918:	
  1195  0038  0020               	movlb	0	; select bank0
  1196  0039  0821               	movf	pwm_dt@dt+1,w
  1197  003A  00A5               	movwf	_pwm_dt$456+1
  1198  003B  0820               	movf	pwm_dt@dt,w
  1199  003C  00A4               	movwf	_pwm_dt$456
  1200  003D                     l134:	
  1201  003D  3524               	lslf	_pwm_dt$456,w
  1202  003E  00A6               	movwf	pwm_dt@abs
  1203  003F  0D25               	rlf	_pwm_dt$456+1,w
  1204  0040  00A7               	movwf	pwm_dt@abs+1
  1205                           
  1206                           ;pwm.c: 91: w.dir = dt < 0;
  1207  0041  1FA1               	btfss	pwm_dt@dt+1,7
  1208  0042  2845               	goto	u510
  1209  0043  147A               	bsf	_w,0
  1210  0044  2846               	goto	l922
  1211  0045                     u510:	
  1212  0045  107A               	bcf	_w,0
  1213  0046                     l922:	
  1214                           
  1215                           ;pwm.c: 93: if (dt_min > abs) {
  1216  0046  3000               	movlw	low (_dt_min| (0+32768))
  1217  0047  0084               	movwf	4
  1218  0048  3082               	movlw	high (_dt_min| (0+32768))
  1219  0049  0085               	movwf	5
  1220  004A  3F00               	moviw [0]fsr0
  1221  004B  0020               	movlb	0	; select bank0
  1222  004C  00A2               	movwf	??_pwm_dt
  1223  004D  3F01               	moviw [1]fsr0
  1224  004E  00A3               	movwf	??_pwm_dt+1
  1225  004F  0823               	movf	??_pwm_dt+1,w
  1226  0050  0227               	subwf	pwm_dt@abs+1,w
  1227  0051  1D03               	skipz
  1228  0052  2855               	goto	u535
  1229  0053  0822               	movf	??_pwm_dt,w
  1230  0054  0226               	subwf	pwm_dt@abs,w
  1231  0055                     u535:	
  1232  0055  1803               	skipnc
  1233  0056  2859               	goto	l926
  1234                           
  1235                           ;pwm.c: 94: abs = 0;
  1236  0057  01A6               	clrf	pwm_dt@abs
  1237  0058  01A7               	clrf	pwm_dt@abs+1
  1238  0059                     l926:	
  1239                           
  1240                           ;pwm.c: 95: }
  1241                           ;pwm.c: 97: if (w.dir != w.ldir) {
  1242  0059  0C7A               	rrf	_w,w
  1243  005A  3901               	andlw	1
  1244  005B  00A2               	movwf	??_pwm_dt
  1245  005C  087A               	movf	_w,w
  1246  005D  3901               	andlw	1
  1247  005E  0622               	xorwf	??_pwm_dt,w
  1248  005F  1903               	skipnz
  1249  0060  2875               	goto	l936
  1250                           
  1251                           ;pwm.c: 98: PIR1bits.TMR2IF = 0;
  1252  0061  1091               	bcf	17,1	;volatile
  1253  0062                     l137:	
  1254                           ;pwm.c: 99: while (!PIR1bits.TMR2IF);
  1255                           
  1256  0062  1C91               	btfss	17,1	;volatile
  1257  0063  2862               	goto	l137
  1258                           
  1259                           ;pwm.c: 100: TRISA5 = 1;
  1260  0064  0021               	movlb	1	; select bank1
  1261  0065  168C               	bsf	12,5	;volatile
  1262                           
  1263                           ;pwm.c: 101: TRISA0 = 1;
  1264  0066  140C               	bsf	12,0	;volatile
  1265                           
  1266                           ;pwm.c: 102: w.dir ? insert_dt(0xFFFF) : insert_dt(0);
  1267  0067  1C7A               	btfss	_w,0
  1268  0068  286D               	goto	l932
  1269  0069  30FF               	movlw	255
  1270  006A  00F3               	movwf	insert_dt@var
  1271  006B  30FF               	movlw	255
  1272  006C  286F               	goto	L1
  1273  006D                     l932:	
  1274  006D  3000               	movlw	0
  1275  006E  00F3               	movwf	insert_dt@var
  1276  006F                     L1:	
  1277  006F  00F4               	movwf	insert_dt@var+1
  1278  0070  2143               	fcall	_insert_dt
  1279                           
  1280                           ;pwm.c: 104: PIR1bits.TMR2IF = 0;
  1281  0071  0020               	movlb	0	; select bank0
  1282  0072  1091               	bcf	17,1	;volatile
  1283  0073                     l144:	
  1284                           ;pwm.c: 105: while (!PIR1bits.TMR2IF);
  1285                           
  1286  0073  1C91               	btfss	17,1	;volatile
  1287  0074  2873               	goto	l144
  1288  0075                     l936:	
  1289                           
  1290                           ;pwm.c: 106: }
  1291                           ;pwm.c: 108: if (abs == 0) {
  1292  0075  0826               	movf	pwm_dt@abs,w
  1293  0076  0427               	iorwf	pwm_dt@abs+1,w
  1294  0077  1D03               	btfss	3,2
  1295  0078  287D               	goto	l147
  1296                           
  1297                           ;pwm.c: 109: TRISA5 = 1;
  1298  0079  0021               	movlb	1	; select bank1
  1299  007A  168C               	bsf	12,5	;volatile
  1300                           
  1301                           ;pwm.c: 110: TRISA0 = 1;
  1302  007B  140C               	bsf	12,0	;volatile
  1303                           
  1304                           ;pwm.c: 111: } else if (w.dir) {
  1305  007C  2898               	goto	l946
  1306  007D                     l147:	
  1307  007D  1C7A               	btfss	_w,0
  1308  007E  288F               	goto	l149
  1309                           
  1310                           ;pwm.c: 112: TRISA5 = 1;
  1311  007F  0021               	movlb	1	; select bank1
  1312  0080  168C               	bsf	12,5	;volatile
  1313                           
  1314                           ;pwm.c: 113: TRISA0 = 0;
  1315  0081  100C               	bcf	12,0	;volatile
  1316                           
  1317                           ;pwm.c: 114: insert_dt(-abs);
  1318  0082  0020               	movlb	0	; select bank0
  1319  0083  0926               	comf	pwm_dt@abs,w
  1320  0084  00A2               	movwf	??_pwm_dt
  1321  0085  0927               	comf	pwm_dt@abs+1,w
  1322  0086  00A3               	movwf	??_pwm_dt+1
  1323  0087  0AA2               	incf	??_pwm_dt,f
  1324  0088  1903               	skipnz
  1325  0089  0AA3               	incf	??_pwm_dt+1,f
  1326  008A  0822               	movf	??_pwm_dt,w
  1327  008B  00F3               	movwf	insert_dt@var
  1328  008C  0823               	movf	??_pwm_dt+1,w
  1329  008D  00F4               	movwf	insert_dt@var+1
  1330  008E  2897               	goto	L2
  1331  008F                     l149:	
  1332                           ;pwm.c: 115: } else {
  1333                           
  1334                           
  1335                           ;pwm.c: 116: TRISA5 = 0;
  1336  008F  0021               	movlb	1	; select bank1
  1337  0090  128C               	bcf	12,5	;volatile
  1338                           
  1339                           ;pwm.c: 117: TRISA0 = 1;
  1340  0091  140C               	bsf	12,0	;volatile
  1341                           
  1342                           ;pwm.c: 118: insert_dt(abs);
  1343  0092  0020               	movlb	0	; select bank0
  1344  0093  0827               	movf	pwm_dt@abs+1,w
  1345  0094  00F4               	movwf	insert_dt@var+1
  1346  0095  0826               	movf	pwm_dt@abs,w
  1347  0096  00F3               	movwf	insert_dt@var
  1348  0097                     L2:	
  1349  0097  2143               	fcall	_insert_dt
  1350  0098                     l946:	
  1351                           
  1352                           ;pwm.c: 119: }
  1353                           ;pwm.c: 121: w.ldir = w.dir;
  1354  0098  1C7A               	btfss	_w,0
  1355  0099  289C               	goto	u600
  1356  009A  14FA               	bsf	_w,1
  1357  009B  0008               	return
  1358  009C                     u600:	
  1359  009C  10FA               	bcf	_w,1
  1360  009D  0008               	return
  1361  009E                     __end_of_pwm_dt:	
  1362                           
  1363                           	psect	text8
  1364  0143                     __ptext8:	
  1365 ;; *************** function _insert_dt *****************
  1366 ;; Defined at:
  1367 ;;		line 80 in file "pwm.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  var             2    3[COMMON] unsigned int 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;		None               void
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1
  1381 ;;      Params:         2       0       0
  1382 ;;      Locals:         0       0       0
  1383 ;;      Temps:          3       0       0
  1384 ;;      Totals:         5       0       0
  1385 ;;Total ram usage:        5 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    2
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_pwm_dt
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _insert_dt
  1397  0143                     _insert_dt:	
  1398                           
  1399                           ;pwm.c: 81: CCPR1L = var >> 8;
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _insert_dt: [wreg+status,2+status,0]
  1403  0143  0874               	movf	insert_dt@var+1,w
  1404  0144  0025               	movlb	5	; select bank5
  1405  0145  0091               	movwf	17	;volatile
  1406                           
  1407                           ;pwm.c: 82: CCP1CONbits.DC1B = var >> 6;
  1408  0146  0874               	movf	insert_dt@var+1,w
  1409  0147  00F6               	movwf	??_insert_dt+1
  1410  0148  0873               	movf	insert_dt@var,w
  1411  0149  00F5               	movwf	??_insert_dt
  1412  014A  3006               	movlw	6
  1413  014B                     u285:	
  1414  014B  36F6               	lsrf	??_insert_dt+1,f
  1415  014C  0CF5               	rrf	??_insert_dt,f
  1416  014D  0B89               	decfsz	9,f
  1417  014E  294B               	goto	u285
  1418  014F  0875               	movf	??_insert_dt,w
  1419  0150  00F7               	movwf	??_insert_dt+2
  1420  0151  0EF7               	swapf	??_insert_dt+2,f
  1421  0152  0813               	movf	19,w	;volatile
  1422  0153  0677               	xorwf	??_insert_dt+2,w
  1423  0154  39CF               	andlw	-49
  1424  0155  0677               	xorwf	??_insert_dt+2,w
  1425  0156  0093               	movwf	19	;volatile
  1426  0157  0008               	return
  1427  0158                     __end_of_insert_dt:	
  1428                           
  1429                           	psect	text9
  1430  0158                     __ptext9:	
  1431 ;; *************** function _i2c_init *****************
  1432 ;; Defined at:
  1433 ;;		line 9 in file "i2c.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  address         1    wreg     unsigned char 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  address         1    3[COMMON] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;		None               void
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1
  1447 ;;      Params:         0       0       0
  1448 ;;      Locals:         1       0       0
  1449 ;;      Temps:          0       0       0
  1450 ;;      Totals:         1       0       0
  1451 ;;Total ram usage:        1 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    2
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _i2c_init
  1463  0158                     _i2c_init:	
  1464                           
  1465                           ;incstack = 0
  1466                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  1467                           ;i2c_init@address stored from wreg
  1468  0158  00F3               	movwf	i2c_init@address
  1469                           
  1470                           ;i2c.c: 11: INTCON=0b11000000;
  1471  0159  30C0               	movlw	192
  1472  015A  008B               	movwf	11	;volatile
  1473                           
  1474                           ;i2c.c: 13: SSPADD=(address<<1);
  1475  015B  3573               	lslf	i2c_init@address,w
  1476  015C  0024               	movlb	4	; select bank4
  1477  015D  0092               	movwf	18	;volatile
  1478                           
  1479                           ;i2c.c: 14: SSPSTAT=0b10000100;
  1480  015E  3084               	movlw	132
  1481  015F  0094               	movwf	20	;volatile
  1482                           
  1483                           ;i2c.c: 15: SSPCON=0b00110110;
  1484  0160  3036               	movlw	54
  1485  0161  0095               	movwf	21	;volatile
  1486                           
  1487                           ;i2c.c: 16: SSPCON2=0b10010000;
  1488  0162  3090               	movlw	144
  1489  0163  0096               	movwf	22	;volatile
  1490                           
  1491                           ;i2c.c: 17: SSPCON3=0;
  1492  0164  0197               	clrf	23	;volatile
  1493                           
  1494                           ;i2c.c: 19: SSP1IE=1;
  1495  0165  0021               	movlb	1	; select bank1
  1496  0166  1591               	bsf	17,3	;volatile
  1497                           
  1498                           ;i2c.c: 20: SSP1IF=0;
  1499  0167  0020               	movlb	0	; select bank0
  1500  0168  1191               	bcf	17,3	;volatile
  1501  0169  0008               	return
  1502  016A                     __end_of_i2c_init:	
  1503                           
  1504                           	psect	intentry
  1505  0004                     __pintentry:	
  1506 ;; *************** function _isr *****************
  1507 ;; Defined at:
  1508 ;;		line 53 in file "main.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;		None               void
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0, pclath, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1
  1522 ;;      Params:         0       0       0
  1523 ;;      Locals:         0       0       0
  1524 ;;      Temps:          1       0       0
  1525 ;;      Totals:         1       0       0
  1526 ;;Total ram usage:        1 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    1
  1529 ;; This function calls:
  1530 ;;		_i2c_isr
  1531 ;;		_isr_tmr
  1532 ;; This function is called by:
  1533 ;;		Interrupt level 1
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537  0004                     _isr:	
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1541  0004  3180               	pagesel	$
  1542  0005  0020               	movlb	0	; select bank0
  1543  0006  087F               	movf	127,w
  1544  0007  00F2               	movwf	??_isr
  1545                           
  1546                           ;main.c: 54: GIE=0;
  1547  0008  138B               	bcf	11,7	;volatile
  1548                           
  1549                           ;main.c: 55: if (PIR1bits.SSP1IF){
  1550  0009  1D91               	btfss	17,3	;volatile
  1551  000A  280D               	goto	i1l906
  1552                           
  1553                           ;main.c: 56: PIR1bits.SSP1IF=0;
  1554  000B  1191               	bcf	17,3	;volatile
  1555                           
  1556                           ;main.c: 57: i2c_isr();
  1557  000C  212C               	fcall	_i2c_isr
  1558  000D                     i1l906:	
  1559                           
  1560                           ;main.c: 59: }
  1561                           ;main.c: 60: if (INTCONbits.T0IF){
  1562  000D  1D0B               	btfss	11,2	;volatile
  1563  000E  2811               	goto	i1l912
  1564                           
  1565                           ;main.c: 61: INTCONbits.T0IF=0;
  1566  000F  110B               	bcf	11,2	;volatile
  1567                           
  1568                           ;main.c: 62: isr_tmr();
  1569  0010  2115               	fcall	_isr_tmr
  1570  0011                     i1l912:	
  1571                           
  1572                           ;main.c: 63: }
  1573                           ;main.c: 64: GIE=1;
  1574  0011  178B               	bsf	11,7	;volatile
  1575  0012  0872               	movf	??_isr,w
  1576  0013  0020               	movlb	0	; select bank0
  1577  0014  00FF               	movwf	127
  1578  0015  0009               	retfie
  1579  0016                     __end_of_isr:	
  1580                           
  1581                           	psect	text11
  1582  0115                     __ptext11:	
  1583 ;; *************** function _isr_tmr *****************
  1584 ;; Defined at:
  1585 ;;		line 134 in file "pwm.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;		None               void
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1
  1599 ;;      Params:         0       0       0
  1600 ;;      Locals:         0       0       0
  1601 ;;      Temps:          0       0       0
  1602 ;;      Totals:         0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_isr
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _isr_tmr
  1614  0115                     _isr_tmr:	
  1615                           
  1616                           ;pwm.c: 136: if (w.fag) {
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _isr_tmr: [wreg+status,2+status,0]
  1620  0115  1D7A               	btfss	_w,2
  1621  0116  2919               	goto	i1l752
  1622                           
  1623                           ;pwm.c: 137: TMR0 = ~ton;
  1624  0117  0979               	comf	_ton,w
  1625  0118  291A               	goto	L3
  1626  0119                     i1l752:	
  1627                           ;pwm.c: 138: } else {
  1628                           
  1629                           
  1630                           ;pwm.c: 139: TMR0 = ~toff;
  1631  0119  0978               	comf	_toff,w
  1632  011A                     L3:	
  1633  011A  0020               	movlb	0	; select bank0
  1634  011B  0095               	movwf	21	;volatile
  1635                           
  1636                           ;pwm.c: 140: }
  1637                           ;pwm.c: 141: LATAbits.LATA4=w.fag;
  1638  011C  1D7A               	btfss	_w,2
  1639  011D  2921               	goto	u22_20
  1640  011E  0022               	movlb	2	; select bank2
  1641  011F  160C               	bsf	12,4	;volatile
  1642  0120  2923               	goto	i1l756
  1643  0121                     u22_20:	
  1644  0121  0022               	movlb	2	; select bank2
  1645  0122  120C               	bcf	12,4	;volatile
  1646  0123                     i1l756:	
  1647                           
  1648                           ;pwm.c: 142: w.fag=!w.fag;
  1649  0123  1003               	clrc
  1650  0124  1D7A               	btfss	_w,2
  1651  0125  1403               	setc
  1652  0126  1C03               	btfss	3,0
  1653  0127  292A               	goto	u24_20
  1654  0128  157A               	bsf	_w,2
  1655  0129  0008               	return
  1656  012A                     u24_20:	
  1657  012A  117A               	bcf	_w,2
  1658  012B  0008               	return
  1659  012C                     __end_of_isr_tmr:	
  1660                           
  1661                           	psect	text12
  1662  012C                     __ptext12:	
  1663 ;; *************** function _i2c_isr *****************
  1664 ;; Defined at:
  1665 ;;		line 24 in file "i2c.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  dammy           1    1[COMMON] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;		None               void
  1672 ;; Registers used:
  1673 ;;		wreg
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1
  1679 ;;      Params:         0       0       0
  1680 ;;      Locals:         1       0       0
  1681 ;;      Temps:          1       0       0
  1682 ;;      Totals:         2       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_isr
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function _i2c_isr
  1694  012C                     _i2c_isr:	
  1695                           
  1696                           ;i2c.c: 25: unsigned char dammy;
  1697                           ;i2c.c: 26: if(SSP1IF){
  1698                           
  1699                           ;incstack = 0
  1700                           ; Regs used in _i2c_isr: [wreg]
  1701  012C  0020               	movlb	0	; select bank0
  1702  012D  1D91               	btfss	17,3	;volatile
  1703  012E  293E               	goto	i1l882
  1704                           
  1705                           ;i2c.c: 27: if(!R_nW){
  1706  012F  0024               	movlb	4	; select bank4
  1707  0130  1914               	btfsc	20,2	;volatile
  1708  0131  293E               	goto	i1l882
  1709                           
  1710                           ;i2c.c: 28: if(!D_nA){
  1711  0132  1A94               	btfsc	20,5	;volatile
  1712  0133  2939               	goto	i1l880
  1713                           
  1714                           ;i2c.c: 29: dammy=SSPBUF;
  1715  0134  0811               	movf	17,w	;volatile
  1716  0135  00F0               	movwf	??_i2c_isr
  1717  0136  0870               	movf	??_i2c_isr,w
  1718  0137  00F1               	movwf	i2c_isr@dammy
  1719                           
  1720                           ;i2c.c: 30: }else{
  1721  0138  293E               	goto	i1l882
  1722  0139                     i1l880:	
  1723                           
  1724                           ;i2c.c: 31: i2c_data=(int8_t)SSPBUF;
  1725  0139  0811               	movf	17,w	;volatile
  1726  013A  00F0               	movwf	??_i2c_isr
  1727  013B  0870               	movf	??_i2c_isr,w
  1728  013C  0020               	movlb	0	; select bank0
  1729  013D  00AC               	movwf	_i2c_data
  1730  013E                     i1l882:	
  1731                           
  1732                           ;i2c.c: 32: }
  1733                           ;i2c.c: 33: }
  1734                           ;i2c.c: 34: }
  1735                           ;i2c.c: 35: SSP1IF=0;
  1736  013E  0020               	movlb	0	; select bank0
  1737  013F  1191               	bcf	17,3	;volatile
  1738                           
  1739                           ;i2c.c: 36: CKP=1;
  1740  0140  0024               	movlb	4	; select bank4
  1741  0141  1615               	bsf	21,4	;volatile
  1742  0142  0008               	return
  1743  0143                     __end_of_i2c_isr:	
  1744  007E                     btemp	set	126	;btemp
  1745  007E                     wtemp	set	126
  1746  007E                     wtemp0	set	126
  1747  0080                     wtemp1	set	128
  1748  0082                     wtemp2	set	130
  1749  0084                     wtemp3	set	132
  1750  0086                     wtemp4	set	134
  1751  0088                     wtemp5	set	136
  1752  007F                     wtemp6	set	127
  1753  007E                     ttemp	set	126
  1754  007E                     ttemp0	set	126
  1755  0081                     ttemp1	set	129
  1756  0084                     ttemp2	set	132
  1757  0087                     ttemp3	set	135
  1758  007F                     ttemp4	set	127
  1759  007E                     ltemp	set	126
  1760  007E                     ltemp0	set	126
  1761  0082                     ltemp1	set	130
  1762  0086                     ltemp2	set	134
  1763  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    3
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     12      13
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _tmr_dt->_tmr_cycle
    _tmr_cycle->___wmul
    _pwm_dt->_insert_dt

Critical Paths under _isr in COMMON

    _isr->_i2c_isr

Critical Paths under _main in BANK0

    _main->_tmr_dt
    _tmr_dt->_tmr_cycle
    _tmr_cycle->___wmul
    _pwm_init->_pwm_dt

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2135
                                             11 BANK0      1     1      0
                           _i2c_init
                         _motor_init
                             _pwm_dt
                             _tmr_dt
 ---------------------------------------------------------------------------------
 (1) _tmr_dt                                               7     6      1     630
                                              4 BANK0      7     6      1
                             ___wmul
                          _tmr_cycle
 ---------------------------------------------------------------------------------
 (2) _tmr_cycle                                            3     2      1     170
                                              7 COMMON     1     0      1
                                              2 BANK0      2     2      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _motor_init                                           0     0      0     745
                           _pwm_init
                           _tmr_init
 ---------------------------------------------------------------------------------
 (2) _tmr_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             0     0      0     745
                             _pwm_dt
 ---------------------------------------------------------------------------------
 (1) _pwm_dt                                               8     6      2     745
                                              0 BANK0      8     6      2
                          _insert_dt
 ---------------------------------------------------------------------------------
 (2) _insert_dt                                            5     3      2     300
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  1     1      0       1
                                              2 COMMON     1     1      0
                            _i2c_isr
                            _isr_tmr
 ---------------------------------------------------------------------------------
 (6) _isr_tmr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _i2c_isr                                              2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _motor_init
     _pwm_init
       _pwm_dt
         _insert_dt
     _tmr_init
   _pwm_dt
     _insert_dt
   _tmr_dt
     ___wmul
     _tmr_cycle
       ___wmul (ARG)

 _isr (ROOT)
   _i2c_isr
   _isr_tmr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      18       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      C       D       6       16.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      18       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Sep 15 10:17:08 2015

                      _w 007A              __CFG_CP$OFF 0000      ___wmul@multiplicand 0075  
            __CFG_LVP$ON 0000                      l134 003D                      l144 0073  
                    l137 0062                      l147 007D                      l149 008F  
                    l246 00CF                      l922 0046                      l932 006D  
                    l926 0059                      l918 0038                      l936 0075  
                    l946 0098                      l976 00C8                      _CKP 10AC  
                    _GIE 005F                      u510 0045                      _PR2 001B  
                    u600 009C                      u505 0029             __CFG_CPD$OFF 0000  
                    u285 014B                      u535 0055                      u635 00D0  
                    u645 00D5                      _isr 0004                      _ton 0079  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_IESO$ON 0000  
                   l1006 00F6                     ?_isr 0070                     _TMR0 0015  
                   _D_nA 10A5                     _R_nW 10A2             __CFG_WRT$OFF 0000  
                   _main 00E3                     _toff 0078                     fsr0h 0005  
                   fsr0l 0004                     indf0 0000                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0016  
                   ttemp 007E                     wtemp 007E          __end_of_i2c_isr 0143  
                  ??_isr 0072            __CFG_PLLEN$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    i1l752 0119                    i1l912 0011  
                  i1l906 000D                    i1l756 0123                    i1l880 0139  
                  i1l882 013E                    u22_20 0121          __end_of_address 0203  
                  u24_20 012A            __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000  
        __end_of_isr_tmr 012C                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
         __CFG_MCLRE$OFF 0000          __initialization 0017             __end_of_main 00FD  
       __end_of_i2c_init 016A                   ??_main 002B                   _CCPR1L 0291  
           i2c_isr@dammy 0071                   _INTCON 000B                   _OSCCON 0099  
                 _SSP1IE 048B                   _SSP1IF 008B                   _SSPADD 0212  
                 _TRISA0 0460                   _TRISA5 0465                   _SSPCON 0215  
                 _SSPBUF 0211                ??_i2c_isr 0070                   ___wmul 00C5  
         __CFG_STVREN$ON 0000                   _dt_min 0200                   _pwm_dt 001F  
                 _tmr_dt 00FD             __pdataCOMMON 0078                ??_isr_tmr 0070  
       __end_of_pwm_init 00C5         __end_of_tmr_init 0178  __end_of__initialization 001D  
         __pcstackCOMMON 0070           _OPTION_REGbits 0095               __pbssBANK0 002C  
              ?_i2c_init 0070               __pmaintext 00E3       __size_of_insert_dt 0015  
                ?___wmul 0073               __pintentry 0004                  ?_pwm_dt 0020  
                ?_tmr_dt 0024       __size_of_tmr_cycle 000D                  _SSPCON2 0216  
                _SSPCON3 0217                  _SSPSTAT 0214               ??_i2c_init 0073  
                _i2c_isr 012C          i2c_init@address 0073          __size_of___wmul 001E  
              ?_pwm_init 0070                ?_tmr_init 0070                  _address 0202  
                __ptext1 00FD                  __ptext2 0178                  __ptext3 00C5  
                __ptext4 0203                  __ptext5 016A                  __ptext6 009E  
                __ptext7 001F                  __ptext8 0143                  __ptext9 0158  
        __size_of_pwm_dt 007F          __size_of_tmr_dt 0018                _T2CONbits 001C  
           __size_of_isr 0012                  _isr_tmr 0115        __end_of_insert_dt 0158  
   end_of_initialization 001D        __end_of_tmr_cycle 0185               ??_pwm_init 0078  
             ??_tmr_init 0073             __pstringtext 0200               _motor_init 0203  
             _pwm_dt$456 0024         __CFG_FOSC$INTOSC 0000                _TRISAbits 008C  
            _CCP1CONbits 0293           __end_of___wmul 00E3            __pidataCOMMON 0206  
         __end_of_dt_min 0202           __end_of_pwm_dt 009E           __end_of_tmr_dt 0115  
    start_initialization 0017              tmr_dt@cycle 0024              __end_of_isr 0016  
           insert_dt@var 0073              tmr_cycle@on 0023        __size_of_i2c_init 0012  
               ??___wmul 0077              ?_motor_init 0070                 ??_pwm_dt 0022  
               ??_tmr_dt 0025              __pbssCOMMON 007A                ___latbits 0000  
          __pcstackBANK0 0020           tmr_cycle@cycle 0077                 ?_i2c_isr 0070  
      __size_of_pwm_init 0027        __size_of_tmr_init 000E                 ?_isr_tmr 0070  
    __size_of_motor_init 0003                _insert_dt 0143           ___wmul@product 0020  
               _LATAbits 010C                 _PIR1bits 0011                _tmr_cycle 0178  
      ___wmul@multiplier 0073                 _i2c_data 002C               ?_insert_dt 0073  
               _i2c_init 0158         __size_of_i2c_isr 0017               _APFCONbits 011D  
             ?_tmr_cycle 0077               _ANSELAbits 018C         __size_of_isr_tmr 0017  
               __ptext11 0115                 __ptext12 012C            __size_of_main 001A  
           _PSTR1CONbits 0296             ??_motor_init 0078                 _pwm_init 009E  
               _tmr_init 016A                pwm_dt@abs 0026               _INTCONbits 000B  
               intlevel1 0000              ??_insert_dt 0075       __end_of_motor_init 0206  
      __CFG_CLKOUTEN$OFF 0000                 pwm_dt@dt 0020                 tmr_dt@dt 002A  
            ??_tmr_cycle 0022  
